// üß≠ –£—Ç–∏–ª–∏—Ç—ã –∑–∞–∫–∞–∑–æ–≤: –º–∞–ø–ø–µ—Ä—ã –∏ —Ñ–∏–ª—å—Ç—Ä—ã –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–≤–µ–¥–µ–Ω–∏—è

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π logger –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω, —á—Ç–æ–±—ã –Ω–µ —Ç–µ—Ä—è—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
const log = global.logger || { warn: () => {} };

function safeParseJson(value, fallback, what) {
    try {
        if (value == null) return fallback;
        return typeof value === 'string' ? JSON.parse(value) : (value || fallback);
    } catch (e) {
        try { log.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ ' + what + ' –≤ mapDbOrderToApi:', e.message); } catch (_) {}
        return fallback;
    }
}

function mapDbOrderToApi(dbOrder) {
    if (!dbOrder) return null;
    return {
        id: dbOrder.order_id || dbOrder.id || dbOrder.orderId,
        status: dbOrder.status,
        paymentStatus: dbOrder.payment_status || dbOrder.paymentStatus,
        totals: { total: parseFloat(dbOrder.total_amount || dbOrder.totalAmount || 0) },
        items: safeParseJson(dbOrder.items, [], 'items'),
        address: safeParseJson(dbOrder.address, {}, 'address'),
        phone: dbOrder.phone,
        customerName: dbOrder.user_name || dbOrder.customerName,
        createdAt: dbOrder.created_at || dbOrder.createdAt,
        payment_id: dbOrder.payment_id || dbOrder.paymentId,
        telegramUserId: dbOrder.user_id || dbOrder.telegramUserId
    };
}

function mapDbOrderToList(dbOrder) {
    return {
        order_id: dbOrder.order_id,
        amount: dbOrder.total_amount || dbOrder.totalAmount || 0,
        purchase_date: dbOrder.created_at || dbOrder.createdAt,
        items: dbOrder.items || [],
        status: dbOrder.status,
        payment_status: dbOrder.payment_status
    };
}

function isOrderCompletedOrPaid(order) {
    return (
        order.payment_status === 'paid' ||
        order.status === 'completed' ||
        order.status === 'delivered' ||
        order.status === 'accepted' ||
        (order.payment_id && order.payment_id !== '')
    );
}

module.exports = { mapDbOrderToApi, mapDbOrderToList, isOrderCompletedOrPaid };


