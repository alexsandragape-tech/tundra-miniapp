// üîß –°–ò–°–¢–ï–ú–ê –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø
const LOG_LEVELS = {
    ERROR: 0,
    WARN: 1,
    INFO: 2,
    DEBUG: 3
};

const CURRENT_LOG_LEVEL = process.env.LOG_LEVEL || LOG_LEVELS.INFO;

function log(level, message, ...args) {
    if (level <= CURRENT_LOG_LEVEL) {
        const timestamp = new Date().toISOString();
        const levelNames = ['‚ùå ERROR', '‚ö†Ô∏è WARN', '‚ÑπÔ∏è INFO', 'üîç DEBUG'];
        console.log(`[${timestamp}] ${levelNames[level]} ${message}`, ...args);
    }
}

// –ê–ª–∏–∞—Å—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
const logger = {
    error: (msg, ...args) => log(LOG_LEVELS.ERROR, msg, ...args),
    warn: (msg, ...args) => log(LOG_LEVELS.WARN, msg, ...args),
    info: (msg, ...args) => log(LOG_LEVELS.INFO, msg, ...args),
    debug: (msg, ...args) => log(LOG_LEVELS.DEBUG, msg, ...args)
};

logger.info('üöÄ –°–¢–ê–†–¢ –°–ï–†–í–ï–†–ê - –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–ê–Ø –í–ï–†–°–ò–Ø!');
logger.info('‚è∞ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞:', new Date().toISOString());

require('dotenv').config();
const express = require('express');
const path = require('path');
const axios = require('axios');
const crypto = require('crypto');
const cors = require('cors');
const rateLimit = require('express-rate-limit');
const helmet = require('helmet');
// üí≥ –°–û–ë–°–¢–í–ï–ù–ù–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø –ÆKASSA API
class YooKassaAPI {
    constructor(shopId, secretKey) {
        this.shopId = shopId;
        this.secretKey = secretKey;
        this.baseURL = 'https://api.yookassa.ru/v3';
        
        logger.info('üí≥ YooKassa API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –∫–ª—é—á–µ–π
        this.validateKeys();
    }
    
    validateKeys() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º Shop ID
        if (!this.shopId || typeof this.shopId !== 'string' || !/^\d+$/.test(this.shopId)) {
            logger.error('‚ùå Shop ID –Ω–µ–≤–µ—Ä–Ω—ã–π');
            return false;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º Secret Key
        if (!this.secretKey || typeof this.secretKey !== 'string' || 
            (!this.secretKey.startsWith('test_') && !this.secretKey.startsWith('live_'))) {
            logger.error('‚ùå Secret Key –Ω–µ–≤–µ—Ä–Ω—ã–π');
            return false;
        }
        
        logger.debug('‚úÖ –§–æ—Ä–º–∞—Ç –∫–ª—é—á–µ–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π');
        return true;
    }
    
    async createPayment(paymentData, idempotenceKey) {
        try {
            logger.debug('üí≥ –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ —á–µ—Ä–µ–∑ –ÆKassa API');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª—é—á–∏ –Ω–µ –ø—É—Å—Ç—ã–µ
            if (!this.shopId || !this.secretKey) {
                throw new Error('–ö–ª—é—á–∏ –ÆKassa –ø—É—Å—Ç—ã–µ!');
            }
            
            const response = await axios.post(`${this.baseURL}/payments`, paymentData, {
                headers: {
                    'Content-Type': 'application/json',
                    'Idempotence-Key': idempotenceKey
                },
                auth: {
                    username: this.shopId,
                    password: this.secretKey
                },
                timeout: 30000
            });
            
            logger.info('‚úÖ –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ:', response.data.id);
            return response.data;
            
        } catch (error) {
            logger.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –ÆKassa:', error.message);
            
            if (error.response?.status === 401) {
                logger.error('üîç –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª—é—á–∏ –ÆKassa');
            }
            
            throw error;
        }
    }
}
const config = require('./config');
const { initializeDatabase, OrdersDB, PurchaseHistoryDB, AdminProductsDB } = require('./database');

const app = express();
const PORT = config.PORT;
const TELEGRAM_BOT_TOKEN = config.TELEGRAM_BOT_TOKEN;
const TELEGRAM_ADMIN_CHAT_ID = config.TELEGRAM_ADMIN_CHAT_ID;

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ–∫—Å–∏ (Railway)
app.set('trust proxy', 1);

// üõ°Ô∏è –ù–ê–°–¢–†–û–ô–ö–ò –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò (–û–¢–ö–õ–Æ–ß–ï–ù–´ –î–õ–Ø TELEGRAM WEB APP)
// –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤

// CORS —Ç–æ–ª—å–∫–æ –¥–ª—è API (–Ω–µ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤)
const corsOrigins = config.CORS_ORIGIN.split(',');
const corsOptions = {
    origin: corsOrigins,
    credentials: true
};

// –ó–∞—â–∏—Ç–∞ –æ—Ç DDoS —Ç–æ–ª—å–∫–æ –¥–ª—è API (–£–ü–†–û–©–ï–ù–ù–ê–Ø)
const limiter = rateLimit({
    windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
    max: 100, // 100 –∑–∞–ø—Ä–æ—Å–æ–≤
    message: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ',
    trustProxy: true
});

// üí≥ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø YOOKASSA
logger.info('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ÆKassa...');

let checkout = null;

// üîß –ê–°–ò–ù–•–†–û–ù–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ÆKASSA
async function initializeYooKassa() {
    try {
        if (!config.YOOKASSA_SHOP_ID || !config.YOOKASSA_SECRET_KEY) {
            throw new Error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–ª—é—á–∏ –ÆKassa');
        }
        
        checkout = new YooKassaAPI(config.YOOKASSA_SHOP_ID, config.YOOKASSA_SECRET_KEY);
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API –ÆKassa
        try {
            const testResponse = await axios.get('https://api.yookassa.ru/v3/me', {
                auth: {
                    username: config.YOOKASSA_SHOP_ID,
                    password: config.YOOKASSA_SECRET_KEY
                },
                timeout: 10000
            });
            
            if (testResponse.data.test) {
                logger.warn('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¢–ï–°–¢–û–í–´–ï –∫–ª—é—á–∏ –ÆKassa');
            } else {
                logger.info('‚úÖ –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –†–ê–ë–û–ß–ò–ï –∫–ª—é—á–∏ –ÆKassa');
            }
        } catch (testError) {
            logger.error('‚ùå –¢–µ—Å—Ç API –ÆKassa –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è:', testError.response?.status);
        }
        
        logger.info('‚úÖ –ÆKassa –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ÆKassa:', error.message);
        logger.warn('‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –±–µ–∑ –ÆKassa');
    }
}

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞–∫–∞–∑–æ–≤ (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
let orders = new Map();
let orderCounter = 0; // –ë—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–∑ –ë–î

// üî• –¢–ê–ô–ú–ï–†–´ –î–õ–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ô –û–¢–ú–ï–ù–´ –ó–ê–ö–ê–ó–û–í (30 –º–∏–Ω—É—Ç)
let orderTimers = new Map();

// üîß –•–†–ê–ù–ò–õ–ò–©–ï –¢–û–í–ê–†–û–í –î–õ–Ø –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò
let adminProducts = new Map();

app.use(express.json());

// üîß CORS –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
app.use((req, res, next) => {
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, PATCH, DELETE, OPTIONS');
    res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization, X-Admin-Password');
    
    if (req.method === 'OPTIONS') {
        res.sendStatus(200);
    } else {
        next();
    }
});

// üóÑÔ∏è –ü–û–õ–ù–´–ô –ö–ê–¢–ê–õ–û–ì –¢–û–í–ê–†–û–í (–≤—Å–µ 49 —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ 8 –∫–∞—Ç–µ–≥–æ—Ä–∏–π)
async function loadFullProductCatalog() {
    return {
        'kolbasy': [
            {
                id: 'chorizo-70',
                name: '–ö–æ–ª–±–∞—Å–∞ –∏–∑ —Å—ã—Ä–æ–≤—è–ª–µ–Ω–∞—è –æ–ª–µ–Ω–∏–Ω—ã "–ß–æ—Ä–∏–∑–æ"',
                price: 395,
                unit: '/70 –≥—Ä.',
                maxQty: 20,
                image: 'üå≠',
                imageUrl: 'images/products/kolbasy/chorizo-70.jpg',
                composition: '–æ–ª–µ–Ω–∏–Ω–∞, –∂–∏—Ä –≥–æ–≤—è–∂–∏–π, —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è, —Å–º–µ—Å—å 5 –ø–µ—Ä—Ü–µ–≤, –ø–∞–ø—Ä–∏–∫–∞ –∫–æ–ø—á–µ–Ω–∞—è, –∫–∞—Ä–¥–∞–º–æ–Ω, –ø–µ—Ä–µ—Ü —á–µ—Ä–Ω—ã–π',
                nutrition: '–±–µ–ª–æ–∫ - 15 –≥, –∂–∏—Ä - 20 –≥',
                calories: '510 –∫–∫–∞–ª/2140 –∫–î–∂',
                storage: '180 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'trufel-70',
                name: '–ö–æ–ª–±–∞—Å–∞ —Å—ã—Ä–æ–≤—è–ª–µ–Ω–∞—è –∏–∑ –æ–ª–µ–Ω–∏–Ω—ã "–° –¢—Ä—é—Ñ–µ–ª–µ–º"',
                price: 411,
                unit: '/70 –≥—Ä.',
                maxQty: 20,
                image: 'üå≠',
                imageUrl: 'images/products/kolbasy/trufel-70.jpg',
                composition: '–æ–ª–µ–Ω–∏–Ω–∞, –∂–∏—Ä –≥–æ–≤—è–∂–∏–π, —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è, —Å–ø–µ—Ü–∏–∏, –ø–µ—Ä–µ—Ü, —Ç—Ä—é—Ñ–µ–ª—å —á–µ—Ä–Ω—ã–π 0,02%, –º—É—Å–∫–∞—Ç–Ω—ã–π –æ—Ä–µ—Ö',
                nutrition: '–±–µ–ª–æ–∫ - 15 –≥, –∂–∏—Ä - 20 –≥',
                calories: '510 –∫–∫–∞–ª/2140 –∫–î–∂',
                storage: '180 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'kedr-70',
                name: '–ö–æ–ª–±–∞—Å–∞ —Å—ã—Ä–æ–≤—è–ª–µ–Ω–∞—è –∏–∑ –æ–ª–µ–Ω–∏–Ω—ã "–°–µ–≤–µ—Ä–Ω–∞—è —Å –∫–µ–¥—Ä–æ–≤—ã–º –æ—Ä–µ—Ö–æ–º"',
                price: 405,
                unit: '/70 –≥—Ä.',
                maxQty: 20,
                image: 'üå≠',
                imageUrl: 'images/products/kolbasy/kedr-70.jpg',
                composition: '–æ–ª–µ–Ω–∏–Ω–∞, –∂–∏—Ä –≥–æ–≤—è–∂–∏–π, –æ—Ä–µ—Ö –∫–µ–¥—Ä–æ–≤—ã–π, —Å–º–µ—Å—å —Å–ø–µ—Ü–∏–π –∏ –ø—Ä—è–Ω–æ—Å—Ç–µ–π, —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è',
                nutrition: '–±–µ–ª–æ–∫ - 15 –≥, –∂–∏—Ä - 20 –≥, —É–≥–ª–µ–≤–æ–¥—ã - 8 –≥',
                calories: '540 –∫–∫–∞–ª/2266 –∫–î–∂',
                storage: '180 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'osobaya-70',
                name: '–ö–æ–ª–±–∞—Å–∞ —Å—ã—Ä–æ–≤—è–ª–µ–Ω–∞—è –∏–∑ –æ–ª–µ–Ω–∏–Ω—ã "–û—Å–æ–±–∞—è"',
                price: 390,
                unit: '/70 –≥—Ä.',
                maxQty: 20,
                image: 'üå≠',
                imageUrl: 'images/products/kolbasy/osobaya-70.jpg',
                composition: '–æ–ª–µ–Ω–∏–Ω–∞, –∂–∏—Ä –≥–æ–≤—è–∂–∏–π, —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è, —Å–∞—Ö–∞—Ä, —Å–ø–µ—Ü–∏–∏, —á–µ—Å–Ω–æ–∫ –º–æ–ª–æ—Ç—ã–π, –º—É—Å–∫–∞—Ç–Ω—ã–π –æ—Ä–µ—Ö, –ø–µ—Ä–µ—Ü, –∞–Ω—Ç–∏–æ–∫–∏—Å–ª–∏—Ç–µ–ª—å (–∞—Å–∫–æ—Ä–±–∏–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞), —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ –∫—É–ª—å—Ç—É—Ä—ã (–º–æ–ª–æ—á–Ω–æ–∫–∏—Å–ª—ã–µ –º–∏–∫—Ä–æ–æ—Ä–≥–∞–Ω–∏–∑–º—ã)',
                nutrition: '–±–µ–ª–æ–∫ - 15 –≥, –∂–∏—Ä - 20 –≥',
                calories: '510 –∫–∫–∞–ª/2140 –∫–î–∂',
                storage: '180 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'chorizo-170',
                name: '–ö–æ–ª–±–∞—Å–∞ —Å—ã—Ä–æ–≤—è–ª–µ–Ω–∞—è –∏–∑ –æ–ª–µ–Ω–∏–Ω—ã "–ß–æ—Ä–∏–∑–æ"',
                price: 860,
                unit: '/170 –≥—Ä.',
                maxQty: 15,
                image: 'üå≠',
                imageUrl: 'images/products/kolbasy/chorizo-170.jpg',
                composition: '–æ–ª–µ–Ω–∏–Ω–∞, –∂–∏—Ä –≥–æ–≤—è–∂–∏–π, —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è, —Å–º–µ—Å—å 5 –ø–µ—Ä—Ü–µ–≤, –ø–∞–ø—Ä–∏–∫–∞ –∫–æ–ø—á–µ–Ω–∞—è, –∫–∞—Ä–¥–∞–º–æ–Ω, –ø–µ—Ä–µ—Ü —á–µ—Ä–Ω—ã–π',
                nutrition: '–±–µ–ª–æ–∫ - 15 –≥, –∂–∏—Ä - 20 –≥',
                calories: '510 –∫–∫–∞–ª/2140 –∫–î–∂',
                storage: '180 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'trufel-200',
                name: '–ö–æ–ª–±–∞—Å–∞ —Å—ã—Ä–æ–≤—è–ª–µ–Ω–∞—è –∏–∑ –æ–ª–µ–Ω–∏–Ω—ã "–° –¢—Ä—é—Ñ–µ–ª–µ–º"',
                price: 980,
                unit: '/200 –≥—Ä.',
                maxQty: 12,
                image: 'üå≠',
                imageUrl: 'images/products/kolbasy/trufel-200.jpg',
                composition: '–æ–ª–µ–Ω–∏–Ω–∞, –∂–∏—Ä –≥–æ–≤—è–∂–∏–π, —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è, —Å–ø–µ—Ü–∏–∏, –ø–µ—Ä–µ—Ü, —Ç—Ä—é—Ñ–µ–ª—å —á–µ—Ä–Ω—ã–π 0,02%, –º—É—Å–∫–∞—Ç–Ω—ã–π –æ—Ä–µ—Ö',
                nutrition: '–±–µ–ª–æ–∫ - 15 –≥, –∂–∏—Ä - 20 –≥',
                calories: '510 –∫–∫–∞–ª/2140 –∫–î–∂',
                storage: '180 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'osobaya-170',
                name: '–ö–æ–ª–±–∞—Å–∞ —Å—ã—Ä–æ–≤—è–ª–µ–Ω–∞—è –∏–∑ –æ–ª–µ–Ω–∏–Ω—ã "–û—Å–æ–±–∞—è"',
                price: 885,
                unit: '/170 –≥—Ä.',
                maxQty: 12,
                image: 'üå≠',
                imageUrl: 'images/products/kolbasy/osobaya-170.jpg',
                composition: '–æ–ª–µ–Ω–∏–Ω–∞, –∂–∏—Ä –≥–æ–≤—è–∂–∏–π, —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è, —Å–∞—Ö–∞—Ä, —Å–ø–µ—Ü–∏–∏, —á–µ—Å–Ω–æ–∫ –º–æ–ª–æ—Ç—ã–π, –º—É—Å–∫–∞—Ç–Ω—ã–π –æ—Ä–µ—Ö, –ø–µ—Ä–µ—Ü',
                nutrition: '–±–µ–ª–æ–∫ - 15 –≥, –∂–∏—Ä - 20 –≥',
                calories: '510 –∫–∫–∞–ª/2140 –∫–î–∂',
                storage: '180 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'kedr-160',
                name: '–ö–æ–ª–±–∞—Å–∞ —Å—ã—Ä–æ–≤—è–ª–µ–Ω–∞—è –∏–∑ –æ–ª–µ–Ω–∏–Ω—ã "–°–µ–≤–µ—Ä–Ω–∞—è —Å –∫–µ–¥—Ä–æ–≤—ã–º –æ—Ä–µ—Ö–æ–º"',
                price: 910,
                unit: '/160 –≥—Ä.',
                maxQty: 10,
                image: 'üå≠',
                imageUrl: 'images/products/kolbasy/kedr-160.jpg',
                composition: '–æ–ª–µ–Ω–∏–Ω–∞, –∂–∏—Ä –≥–æ–≤—è–∂–∏–π, –æ—Ä–µ—Ö –∫–µ–¥—Ä–æ–≤—ã–π, —Å–º–µ—Å—å —Å–ø–µ—Ü–∏–π –∏ –ø—Ä—è–Ω–æ—Å—Ç–µ–π, —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è',
                nutrition: '–±–µ–ª–æ–∫ - 15 –≥, –∂–∏—Ä - 20 –≥, —É–≥–ª–µ–≤–æ–¥—ã - 8 –≥',
                calories: '540 –∫–∫–∞–ª/2266 –∫–î–∂',
                storage: '180 —Å—É—Ç–æ–∫',
                available: true
            }
        ],
        'pashtet': [
            {
                id: 'riyet-olene-griby',
                name: '–†–∏–π–µ—Ç –∏–∑ –æ–ª–µ–Ω–∏–Ω—ã —Å –±–µ–ª—ã–º–∏ –≥—Ä–∏–±–∞–º–∏ –∏ —Ç—Ä—é—Ñ–µ–ª–µ–º',
                price: 378,
                unit: '/85 –≥—Ä.',
                maxQty: 15,
                image: 'ü•´',
                imageUrl: 'images/products/pashtet/riyet-olene-griby.jpg',
                composition: '–º—è—Å–æ —Å–µ–≤–µ—Ä–Ω–æ–≥–æ –æ–ª–µ–Ω—è, –≥—Ä–∏–±—ã –±–µ–ª—ã–µ, —Ç—Ä—é—Ñ–µ–ª—å —á–µ—Ä–Ω—ã–π 0,02%, –∂–∏—Ä –æ–ª–µ–Ω–∏–π, –ª—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π',
                nutrition: '–±–µ–ª–∫–∏ - 17,8 –≥, –∂–∏—Ä—ã - 19,8 –≥, —É–≥–ª–µ–≤–æ–¥—ã - 2,6 –≥',
                calories: '259,8 –∫–∫–∞–ª/1087 –∫–î–∂',
                storage: '90 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'riyet-serdtse',
                name: '–†–∏–π–µ—Ç –∏–∑ —Å–µ—Ä–¥—Ü–∞ –æ–ª–µ–Ω—è —Å —à–∞–º–ø–∏–Ω—å–æ–Ω–∞–º–∏, —è–≥–æ–¥–∞–º–∏, –º–æ–∂–∂–µ–≤–µ–ª—å–Ω–∏–∫–∞ –∏ —Ä–æ–∑–º–∞—Ä–∏–Ω–æ–º',
                price: 360,
                unit: '/85 –≥—Ä.',
                maxQty: 15,
                image: 'ü•´',
                imageUrl: 'images/products/pashtet/riyet-serdtse.jpg',
                composition: '–º—è—Å–æ —Å–µ–≤–µ—Ä–Ω–æ–≥–æ –æ–ª–µ–Ω—è, –º–æ—Ä–∫–æ–≤—å, –ª—É–∫, –≤–∏–Ω–æ –±–µ–ª–æ–µ —Å—É—Ö–æ–µ, —Å–æ–ª—å –º–æ—Ä—Å–∫–∞—è, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ, –º–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ, —Å–æ–ª—å, —è–≥–æ–¥—ã –º–æ–∂–∂–µ–≤–µ–ª—å–Ω–∏–∫–∞, –ø–µ—Ä–µ—Ü',
                nutrition: '–±–µ–ª–∫–∏ - 12 –≥, –∂–∏—Ä—ã - 10 –≥, —É–≥–ª–µ–≤–æ–¥—ã - 9 –≥',
                calories: '182 –∫–∫–∞–ª/762 –∫–î–∂',
                storage: '90 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'riyet-utka',
                name: '–†–∏–π–µ—Ç –∏–∑ –ø–æ–ª—è—Ä–Ω–æ–π —É—Ç–∫–∏ —Å —Ç—Ä—é—Ñ–µ–ª–µ–º',
                price: 378,
                unit: '/85 –≥—Ä.',
                maxQty: 15,
                image: 'ü•´',
                imageUrl: 'images/products/pashtet/riyet-utka.jpg',
                composition: '–º—è—Å–æ —É—Ç–∫–∏, –±–µ–ª—ã–µ –≥—Ä–∏–±—ã, –≤–∏–Ω–æ –±–µ–ª–æ–µ —Å—É—Ö–æ–µ, —É—Ç–∏–Ω—ã–π –∂–∏—Ä, —Ç—Ä—é—Ñ–µ–ª—å —á–µ—Ä–Ω—ã–π 0,02%, –ª—É–∫, —Å–æ–ª—å –º–æ—Ä—Å–∫–∞—è, —Å–ø–µ—Ü–∏–∏',
                nutrition: '–±–µ–ª–∫–∏ - 13,3 –≥, –∂–∏—Ä—ã - 45,9 –≥, —É–≥–ª–µ–≤–æ–¥—ã - 2,3 –≥',
                calories: '496 –∫–∫–∞–ª/2077 –∫–î–∂',
                storage: '90 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'riyet-yagnenok',
                name: '–†–∏–π–µ—Ç –∏–∑ —è–≥–Ω–µ–Ω–∫–∞',
                price: 365,
                unit: '/85 –≥—Ä.',
                maxQty: 15,
                image: 'ü•´',
                imageUrl: 'images/products/pashtet/riyet-yagnenok.jpg',
                composition: '–º—è—Å–æ —è–≥–Ω–µ–Ω–∫–∞, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ, –ª—É–∫, —Å–æ–ª—å –º–æ—Ä—Å–∫–∞—è, —Å–ø–µ—Ü–∏–∏',
                nutrition: '–±–µ–ª–∫–∏ - 15,7 –≥, –∂–∏—Ä—ã - 15,4 –≥, —É–≥–ª–µ–≤–æ–¥—ã - 5,5 –≥',
                calories: '223,4 –∫–∫–∞–ª/935 –∫–î–∂',
                storage: '90 —Å—É—Ç–æ–∫',
                available: true
            }
        ],
        'delikatesy': [
            {
                id: 'hamon-utka',
                name: '–•–∞–º–æ–Ω –∏–∑ —É—Ç–∫–∏ —Å—ã—Ä–æ–≤—è–ª–µ–Ω—ã–π',
                price: 560,
                unit: '/70 –≥—Ä.',
                maxQty: 12,
                image: 'ü•©',
                imageUrl: 'images/products/delikatesy/hamon-utka.jpg',
                composition: '—Ñ–∏–ª–µ —É—Ç–∏–Ω–æ–π –≥—Ä—É–¥–∫–∏ –ø—Ä–µ–º–∏—É–º, —Å–æ–ª—å, —Å–ø–µ—Ü–∏–∏',
                nutrition: '–±–µ–ª–∫–∏ - 18,9 –≥, –∂–∏—Ä—ã - 9 –≥, —É–≥–ª–µ–≤–æ–¥—ã - 1,9 –≥',
                calories: '172 –∫–∫–∞–ª/720,1 –∫–î–∂',
                storage: '180 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'karpachcho-olene',
                name: '–ö–∞—Ä–ø–∞—á—á–æ –∏–∑ –æ–ª–µ–Ω–∏–Ω—ã –≤—ã—Å—à–∏–π —Å–æ—Ä—Ç',
                price: 495,
                unit: '/70 –≥—Ä.',
                maxQty: 12,
                image: 'ü•©',
                imageUrl: 'images/products/delikatesy/karpachcho-olene.jpg',
                composition: '–æ–ª–µ–Ω–∏–Ω–∞ –≤—ã—Å—à–∏–π —Å–æ—Ä—Ç, —Å–ø–µ—Ü–∏–∏, —Å–æ–ª—å',
                nutrition: '–±–µ–ª–∫–∏ - 22 –≥, –∂–∏—Ä—ã - 6 –≥',
                calories: '160 –∫–∫–∞–ª/620 –∫–î–∂',
                storage: '180 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'sneki-okorok',
                name: '–°–Ω–µ–∫–∏ –∏–∑ –æ–∫–æ—Ä–æ–∫–∞ –æ–ª–µ–Ω—è —Å—ã—Ä–æ–≤—è–ª–µ–Ω—ã–µ "–¢–∞—ë–∂–Ω—ã–µ —Å –¥—ã–º–∫–æ–º"',
                price: 170,
                unit: '/30 –≥—Ä.',
                maxQty: 12,
                image: 'ü•©',
                imageUrl: 'images/products/delikatesy/sneki-okorok.jpg',
                composition: '–æ–ª–µ–Ω–∏–Ω–∞ 1 —Å–æ—Ä—Ç, —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è, BBQ –ø–∞–ø—Ä–∏–∫–∞, –º—É—Å–∫–∞—Ç–Ω—ã–π –æ—Ä–µ—Ö',
                nutrition: '–±–µ–ª–∫–∏ - 20 –≥, –∂–∏—Ä—ã - 6 –≥',
                calories: '180 –∫–∫–∞–ª/610 –∫–î–∂',
                storage: '180 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'filey-olene',
                name: '–§–∏–ª–µ–π –æ–ª–µ–Ω—è —Å—ã—Ä–æ–≤—è–ª–µ–Ω—ã–π',
                price: 490,
                unit: '/70 –≥—Ä.',
                maxQty: 12,
                image: 'ü•©',
                imageUrl: 'images/products/delikatesy/filey-olene.jpg',
                composition: '–æ–ª–µ–Ω–∏–Ω–∞, —Å–∞—Ö–∞—Ä, —ç–∫—Å—Ç—Ä–∞–∫—Ç—ã –ø—Ä—è–Ω–æ—Å—Ç–µ–π (—á–µ—Ä–Ω—ã–π –ø–µ—Ä–µ—Ü, –∫–æ—Ä–∏–∞–Ω–¥—Ä), —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è',
                nutrition: '–ë–µ–ª–∫–∏ - 20,0 –≥, –∂–∏—Ä—ã - 10,0 –≥, —É–≥–ª–µ–≤–æ–¥—ã - 1,5 –≥',
                calories: '260 –∫–∫–∞–ª/1090 –∫–î–∂',
                storage: '180 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'pastila-filey',
                name: '–ü–∞—Å—Ç–∏–ª–∞ —Å—ã—Ä–æ–≤—è–ª–µ–Ω–∞—è –∏–∑ —Ñ–∏–ª–µ—è –æ–ª–µ–Ω—è',
                price: 250,
                unit: '/50 –≥—Ä.',
                maxQty: 15,
                image: 'ü•©',
                imageUrl: 'images/products/delikatesy/pastila-filey.jpg',
                composition: '–≤—ã—Ä–µ–∑–∫–∞ –æ–ª–µ–Ω—è –≤—ã—Å—à–∏–π —Å–æ—Ä—Ç, —Å–∞—Ö–∞—Ä, —Å–æ–µ–≤—ã–π —Å–æ—É—Å, —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è, –ø–∞–ø—Ä–∏–∫–∞ BBQ, —Å–º–µ—Å—å —Å–ø–µ—Ü–∏–π, –æ—Å—Ç—Ä—ã–π –∫–∞–π–µ–Ω—Å–∫–∏–π –ø–µ—Ä–µ—Ü, –Ω–∏—Ç—Ä–∏—Ç–Ω–æ-–ø–æ—Å–æ–ª–æ—á–Ω–∞—è —Å–º–µ—Å—å',
                nutrition: '–±–µ–ª–∫–∏ - 25 –≥, –∂–∏—Ä—ã ‚Äì 10 –≥, —É–≥–ª–µ–≤–æ–¥—ã - 3 –≥',
                calories: '176 –∫–∫–∞–ª/736 –∫–î–∂',
                storage: '180 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'chipsy-olene',
                name: '–ß–∏–ø—Å—ã –∏–∑ –æ–ª–µ–Ω–∏–Ω—ã —Å—ã—Ä–æ–≤—è–ª–µ–Ω—ã–µ',
                price: 230,
                unit: '/50 –≥—Ä.',
                maxQty: 15,
                image: 'ü•©',
                imageUrl: 'images/products/delikatesy/chipsy-olene.jpg',
                composition: '–æ–ª–µ–Ω–∏–Ω–∞ 1 —Å–æ—Ä—Ç, —Å–æ–ª—å, —Å–æ—É—Å –≤–æ—Ä—á–µ—Å—Ç–µ—Ä, —Å–ø–µ—Ü–∏–∏, —Å–∞—Ö–∞—Ä',
                nutrition: '–±–µ–ª–∫–∏ - 18,0 –≥, –∂–∏—Ä—ã - 7,0 –≥, —É–≥–ª–µ–≤–æ–¥—ã - 12,0 –≥',
                calories: '140 –∫–∫–∞–ª/590 –∫–î–∂',
                storage: '180 —Å—É—Ç–æ–∫',
                available: true
            }
        ],
        'gotovye': [
            {
                id: 'koreyka-yagody',
                name: '–ö–æ—Ä–µ–π–∫–∞ –æ–ª–µ–Ω—è –∑–∞–ø–µ—á—ë–Ω–Ω–∞—è –≤ —Å–µ–≤–µ—Ä–Ω—ã—Ö —è–≥–æ–¥–∞—Ö',
                price: 4880,
                unit: '/–∫–≥',
                maxQty: 5,
                image: 'üî•',
                imageUrl: 'images/products/gotovye/koreyka-yagody.jpg',
                composition: '–∫–æ—Ä–µ–π–∫–∞ –æ–ª–µ–Ω—è –≤—ã—Å—à–∏–π —Å–æ—Ä—Ç, –º–∞—Ä–∏–Ω–∞–¥ –∏–∑ –°–µ–≤–µ—Ä–Ω—ã—Ö —è–≥–æ–¥ (–±—Ä—É—Å–Ω–∏–∫–∞, –º–æ—Ä–æ—à–∫–∞), —Å–ø–µ—Ü–∏–∏ (—Ä–æ–∑–º–∞—Ä–∏–Ω, —Å–º–µ—Å—å –ø–µ—Ä—Ü–µ–≤), —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è',
                nutrition: '–±–µ–ª–∫–∏ - 22 –≥, –∂–∏—Ä—ã - 11 –≥',
                calories: '260 –∫–∫–∞–ª/1190 –∫–î–∂',
                storage: '20 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'koreyka-bbq',
                name: '–ö–æ—Ä–µ–π–∫–∞ –æ–ª–µ–Ω—è –∑–∞–ø–µ—á—ë–Ω–Ω–∞—è "BBQ"',
                price: 4880,
                unit: '/–∫–≥',
                maxQty: 5,
                image: 'üî•',
                imageUrl: 'images/products/gotovye/koreyka-bbq.jpg',
                composition: '–∫–æ—Ä–µ–π–∫–∞ –æ–ª–µ–Ω—è –≤—ã—Å—à–∏–π —Å–æ—Ä—Ç, –ü–∞–ø—Ä–∏–∫–∞ BBQ, —Å–æ—É—Å –≤–æ—Ä—á–µ—Å—Ç–µ—Ä, —Å–ø–µ—Ü–∏–∏, —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è, –Ω–∏—Ç—Ä–∏—Ç–Ω–æ-–ø–æ—Å–æ–ª–æ—á–Ω–∞—è —Å–º–µ—Å—å',
                nutrition: '–±–µ–ª–∫–∏ - 22 –≥, –∂–∏—Ä—ã - 11 –≥',
                calories: '260 –∫–∫–∞–ª/1190 –∫–î–∂',
                storage: '20 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'okorok-vino',
                name: '–û–∫–æ—Ä–æ–∫ –æ–ª–µ–Ω—è —Ç–æ–º–ª–µ–Ω—ã–π —Å –≤–∏–Ω–æ–º –∏ –ø—Ä—è–Ω—ã–º–∏ —Ç—Ä–∞–≤–∞–º–∏',
                price: 4480,
                unit: '/–∫–≥',
                maxQty: 5,
                image: 'üî•',
                imageUrl: 'images/products/gotovye/okorok-vino.jpg',
                composition: '–æ–∫–æ—Ä–æ–∫ —Å–µ–≤–µ—Ä–Ω–æ–≥–æ –æ–ª–µ–Ω—è –≤—ã—Å—à–∏–π —Å–æ—Ä—Ç, —Å–∞—Ö–∞—Ä, —Å–æ–µ–≤—ã–π —Å–æ—É—Å, —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è, —Ç–∏–º—å—è–Ω, —Ä–æ–∑–º–∞—Ä–∏–Ω',
                nutrition: '–±–µ–ª–∫–∏ - 22 –≥, –∂–∏—Ä—ã - 6 –≥',
                calories: '160 –∫–∫–∞–ª/620 –∫–î–∂',
                storage: '20 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'okorok-trufel',
                name: '–û–∫–æ—Ä–æ–∫ –æ–ª–µ–Ω—è —Ç–æ–º–ª–µ–Ω—ã–π —Å —Ç—Ä—é—Ñ–µ–ª–µ–º',
                price: 4600,
                unit: '/–∫–≥',
                maxQty: 5,
                image: 'üî•',
                imageUrl: 'images/products/gotovye/okorok-trufel.jpg',
                composition: '–æ–∫–æ—Ä–æ–∫ —Å–µ–≤–µ—Ä–Ω–æ–≥–æ –æ–ª–µ–Ω—è –≤—ã—Å—à–∏–π —Å–æ—Ä—Ç, –º–∞—Ä–∏–Ω–∞–¥ (—Å–æ—É—Å –≤–æ—Ä—á–µ—Å—Ç–µ—Ä, Guinness), —Ç—Ä—é—Ñ–µ–ª—å —á–µ—Ä–Ω—ã–π 0,02%, —Å–º–µ—Å—å —Å–ø–µ—Ü–∏–π (—Ä–æ–∑–º–∞—Ä–∏–Ω, –º—É—Å–∫–∞—Ç–Ω—ã–π –æ—Ä–µ—Ö, –∞–Ω–∏—Å), —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è',
                nutrition: '–±–µ–ª–∫–∏ - 22 –≥, –∂–∏—Ä—ã - 6 –≥',
                calories: '160 –∫–∫–∞–ª/620 –∫–î–∂',
                storage: '20 —Å—É—Ç–æ–∫',
                available: true
            },
            {
                id: 'pastrami-trufel',
                name: '–ü–∞—Å—Ç—Ä–∞–º–∏ –∏–∑ –æ–∫–æ—Ä–æ–∫–∞ –æ–ª–µ–Ω—è —Å —Ç—Ä—é—Ñ–µ–ª–µ–º',
                price: 4630,
                unit: '/–∫–≥',
                maxQty: 5,
                image: 'üî•',
                imageUrl: 'images/products/gotovye/pastrami-trufel.jpg',
                composition: '–æ–∫–æ—Ä–æ–∫ —Å–µ–≤–µ—Ä–Ω–æ–≥–æ –æ–ª–µ–Ω—è –≤—ã—Å—à–∏–π —Å–æ—Ä—Ç, —Å–º–µ—Å—å —Å–ø–µ—Ü–∏–π (—Ç–∏–º—å—è–Ω, —Ä–æ–∑–º–∞—Ä–∏–Ω, –∫–æ—Ä–∏–∞–Ω–¥—Ä), –º–∞—Ä–∏–Ω–∞–¥ (–≤–∏–Ω–æ –∫—Ä–∞—Å–Ω–æ–µ —Å—É—Ö–æ–µ, –º—ë–¥), —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è',
                nutrition: '–±–µ–ª–∫–∏ - 22 –≥, –∂–∏—Ä—ã - 6 –≥',
                calories: '160 –∫–∫–∞–ª/620 –∫–î–∂',
                storage: '20 —Å—É—Ç–æ–∫',
                available: true
            }
        ],
        'zamorozhennye': [
            {
                id: 'pelmeni-severnye',
                name: '–ü–µ–ª—å–º–µ–Ω–∏ ¬´–°–µ–≤–µ—Ä–Ω—ã–µ¬ª —Å —Ç—Ä—é—Ñ–µ–ª–µ–º',
                price: 758,
                unit: '/500 –≥—Ä.',
                maxQty: 8,
                image: '‚ùÑÔ∏è',
                imageUrl: 'images/products/zamorozhennye/pelmeni-severnye.jpg',
                composition: '—Ñ–∞—Ä—à - –æ–ª–µ–Ω–∏–Ω–∞, —Å–æ–ª—å, –ø–µ—Ä–µ—Ü, —Ç—Ä—é—Ñ–µ–ª—å–Ω–æ–µ –º–∞—Å–ª–æ, –¢–µ—Å—Ç–æ - –º—É–∫–∞ –ø—à–µ–Ω–∏—á–Ω–∞—è –≤/—Å, –≤–æ–¥–∞, —Å–æ–ª—å, —è–∏—á–Ω—ã–π –º–µ–ª–∞–Ω–∂, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ',
                nutrition: '–±–µ–ª–∫–∏ - 16 –≥, –∂–∏—Ä—ã - 12 –≥, —É–≥–ª–µ–≤–æ–¥—ã - 28 –≥',
                calories: '220 –∫–∫–∞–ª/921 –∫–î–∂',
                storage: '10 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'pelmeni-taymyrskie',
                name: '–ü–µ–ª—å–º–µ–Ω–∏ ¬´–¢–∞–π–º—ã—Ä—Å–∫–∏–µ¬ª',
                price: 758,
                unit: '/500 –≥—Ä.',
                maxQty: 8,
                image: '‚ùÑÔ∏è',
                imageUrl: 'images/products/zamorozhennye/pelmeni-taymyrskie.jpg',
                composition: '–æ–ª–µ–Ω–∏–Ω–∞, –ª—É–∫, –≤–æ–¥–∞, —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è, –ø–µ—Ä–µ—Ü —á—ë—Ä–Ω—ã–π –º–æ–ª–æ—Ç—ã–π. –¢–µ—Å—Ç–æ ‚Äì –º—É–∫–∞ –ø—à–µ–Ω–∏—á–Ω–∞—è –≤/—Å, –≤–æ–¥–∞, —Å–æ–ª—å, —è–∏—á–Ω—ã–π –º–µ–ª–∞–Ω–∂, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ',
                nutrition: '–±–µ–ª–∫–∏ - 22 –≥, –∂–∏—Ä—ã - 6 –≥, —É–≥–ª–µ–≤–æ–¥—ã - 28 –≥',
                calories: '220 –∫–∫–∞–ª/921 –∫–î–∂',
                storage: '10 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'pelmeni-los-griby',
                name: '–ü–µ–ª—å–º–µ–Ω–∏ —Å –º—è—Å–æ–º –ª–æ—Å—è –∏ –≥—Ä–∏–±–∞–º–∏',
                price: 780,
                unit: '/500 –≥—Ä.',
                maxQty: 8,
                image: '‚ùÑÔ∏è',
                imageUrl: 'images/products/zamorozhennye/pelmeni-los-griby.jpg',
                composition: '–º—è—Å–æ –ª–æ—Å—è, –≥–æ–≤—è–∂–∏–π –∂–∏—Ä, –ª—É–∫, –≤–æ–¥–∞, –ø–µ—Ä–µ—Ü —á–µ—Ä–Ω—ã–π –º–æ–ª–æ—Ç—ã–π, —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è, –≥—Ä–∏–±—ã —à–∞–º–ø–∏–Ω—å–æ–Ω—ã. –¢–µ—Å—Ç–æ: –º—É–∫–∞ –≤/—Å, –≤–æ–¥–∞, —è–∏—á–Ω—ã–π –º–µ–ª–∞–Ω–∂, —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ',
                nutrition: '–±–µ–ª–∫–∏ - 16 –≥, –∂–∏—Ä—ã - 12 –≥, —É–≥–ª–µ–≤–æ–¥—ã - 28 –≥',
                calories: '220 –∫–∫–∞–ª/921 –∫–î–∂',
                storage: '10 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'pelmeni-chernye',
                name: '–ü–µ–ª—å–º–µ–Ω–∏ —á—ë—Ä–Ω—ã–µ –∏–∑ –æ–ª–µ–Ω–∏–Ω—ã —Å —Ç—Ä—é—Ñ–µ–ª–µ–º (—Ä—É—á–Ω–∞—è –ª–µ–ø–∫–∞)',
                price: 960,
                unit: '/500 –≥—Ä.',
                maxQty: 6,
                image: '‚ùÑÔ∏è',
                imageUrl: 'images/products/zamorozhennye/pelmeni-chernye.jpg',
                composition: '—Ñ–∞—Ä—à - –æ–ª–µ–Ω–∏–Ω–∞, –º–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ, –µ–∂–µ–≤–∏–∫–∞, —Å–æ–ª—å, –º—É—Å–∫–∞—Ç–Ω—ã–π –æ—Ä–µ—Ö, –æ—Ä–µ–≥–∞–Ω–æ, —Ç—Ä—é—Ñ–µ–ª—å -0,02%, –¢–µ—Å—Ç–æ ‚Äì –º—É–∫–∞ –ø—à–µ–Ω–∏—á–Ω–∞—è –≤/—Å, –≤–æ–¥–∞, —Å–æ–ª—å, —è–∏—á–Ω—ã–π –º–µ–ª–∞–Ω–∂, —á–µ—Ä–Ω–∏–ª–∞ –∫–∞—Ä–∞–∫–∞—Ç–∏—Ü—ã',
                nutrition: '–±–µ–ª–∫–∏ - 22 –≥, –∂–∏—Ä—ã - 6 –≥, —É–≥–ª–µ–≤–æ–¥—ã - 28 –≥',
                calories: '220 –∫–∫–∞–ª/921 –∫–î–∂',
                storage: '10 –º–µ—Å—è—Ü–µ–≤',
                available: true
            }
        ],
        'polufabrikaty': [
            {
                id: 'okorok-olene',
                name: '–û–∫–æ—Ä–æ–∫ –æ–ª–µ–Ω—è',
                price: 1970,
                unit: '/–∫–≥',
                maxQty: 6,
                image: 'ü•ì',
                imageUrl: 'images/products/polufabrikaty/okorok-olene.jpg',
                composition: '–æ–ª–µ–Ω–∏–Ω–∞ –æ–∫–æ—Ä–æ–∫ –≤—ã—Å—à–∏–π —Å–æ—Ä—Ç',
                nutrition: '–±–µ–ª–∫–∏ - 22 –≥, –∂–∏—Ä—ã - 11 –≥',
                calories: '260 –∫–∫–∞–ª/1190 –∫–î–∂',
                storage: '10 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'vyrezka-olene',
                name: '–í—ã—Ä–µ–∑–∫–∞ –æ–ª–µ–Ω—è',
                price: 3160,
                unit: '/–∫–≥',
                maxQty: 4,
                image: 'ü•ì',
                imageUrl: 'images/products/polufabrikaty/vyrezka-olene.jpg',
                composition: '–≤—ã—Ä–µ–∑–∫–∞ –æ–ª–µ–Ω—è –≤—ã—Å—à–∏–π —Å–æ—Ä—Ç',
                nutrition: '–ë–µ–ª–∫–∏ - 22 –≥, –ñ–∏—Ä—ã - 11 –≥',
                calories: '260 –∫–∫–∞–ª/1190 –∫–î–∂',
                storage: '10 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'koreyka-kost',
                name: '–ö–æ—Ä–µ–π–∫–∞ –æ–ª–µ–Ω—è –Ω–∞ –∫–æ—Å—Ç–∏',
                price: 3310,
                unit: '/–∫–≥',
                maxQty: 4,
                image: 'ü•ì',
                imageUrl: 'images/products/polufabrikaty/koreyka-kost.jpg',
                composition: '–∫–æ—Ä–µ–π–∫–∞ –æ–ª–µ–Ω—è –≤—ã—Å—à–∏–π —Å–æ—Ä—Ç',
                nutrition: '–ë–µ–ª–∫–∏ - 22 –≥, –ñ–∏—Ä—ã - 11 –≥',
                calories: '260 –∫–∫–∞–ª/1190 –∫–î–∂',
                storage: '10 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'kupaty-piknik',
                name: '–ö—É–ø–∞—Ç—ã "–ü–∏–∫–Ω–∏–∫"',
                price: 1268,
                unit: '/–∫–≥',
                maxQty: 8,
                image: 'ü•ì',
                imageUrl: 'images/products/polufabrikaty/kupaty-piknik.jpg',
                composition: '–æ–ª–µ–Ω–∏–Ω–∞, —à–ø–∏–∫, —á–µ—Å–Ω–æ–∫, —Å–∞—Ö–∞—Ä, —ç–∫—Å—Ç—Ä–∞–∫—Ç—ã –ø—Ä—è–Ω–æ—Å—Ç–µ–π, –∫–æ—Ä–∏–∞–Ω–¥—Ä, —á–µ—Ä–Ω—ã–π –ø–µ—Ä–µ—Ü, —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è',
                nutrition: '–±–µ–ª–∫–∏ - 15,0 –≥, –∂–∏—Ä—ã - 21,0 –≥, —É–≥–ª–µ–≤–æ–¥—ã - 1,5 –≥',
                calories: '260 –∫–∫–∞–ª/1090 –∫–î–∂',
                storage: '12 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'kupaty-tundra',
                name: '–ö—É–ø–∞—Ç—ã "–¢—É–Ω–¥—Ä–∞"',
                price: 1268,
                unit: '/–∫–≥',
                maxQty: 8,
                image: 'ü•ì',
                imageUrl: 'images/products/polufabrikaty/kupaty-tundra.jpg',
                composition: '–æ–ª–µ–Ω–∏–Ω–∞, —à–ø–∏–∫, –ª—É–∫, —Å–∞—Ö–∞—Ä, —ç–∫—Å—Ç—Ä–∞–∫—Ç—ã –ø—Ä—è–Ω–æ—Å—Ç–µ–π, —Å–æ–ª—å –ø–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –ø–∏—â–µ–≤–∞—è',
                nutrition: '–±–µ–ª–∫–∏ - 15 –≥, –∂–∏—Ä—ã - 21 –≥, —É–≥–ª–µ–≤–æ–¥—ã - 1 –≥',
                calories: '250 –∫–∫–∞–ª/1050 –∫–î–∂',
                storage: '12 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'kotleti-burger',
                name: '–ö–æ—Ç–ª–µ—Ç—ã –¥–ª—è –±—É—Ä–≥–µ—Ä–∞ –∏–∑ –º—è—Å–∞ —Å–µ–≤–µ—Ä–Ω–æ–≥–æ –æ–ª–µ–Ω—è',
                price: 290,
                unit: '/300 –≥—Ä. (2 —à—Ç—É–∫–∏)',
                maxQty: 10,
                image: 'ü•ì',
                imageUrl: 'images/products/polufabrikaty/kotleti-burger.jpg',
                composition: '–º—è—Å–æ —Å–µ–≤–µ—Ä–Ω–æ–≥–æ –æ–ª–µ–Ω—è —Ä—É–±–ª–µ–Ω–Ω–æ–µ, –∂–∏—Ä –æ–ª–µ–Ω–∏–π',
                nutrition: '–ë–µ–ª–∫–∏ - 17 –≥, –ñ–∏—Ä—ã - 12 –≥',
                calories: '270 –∫–∫–∞–ª/980 –∫–î–∂',
                storage: '10 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'lopatka-olene',
                name: '–õ–æ–ø–∞—Ç–∫–∞ –æ–ª–µ–Ω—è –±–µ–∑ –∫–æ—Å—Ç–∏',
                price: 1770,
                unit: '/–∫–≥',
                maxQty: 6,
                image: 'ü•ì',
                imageUrl: 'images/products/polufabrikaty/lopatka-olene.jpg',
                composition: '–æ–ª–µ–Ω–∏–Ω–∞ –ª–æ–ø–∞—Ç–æ—á–Ω–∞—è —á–∞—Å—Ç—å –±–µ–∑ –∫–æ—Å—Ç–∏',
                nutrition: '–ë–µ–ª–∫–∏ - 19 –≥, –ñ–∏—Ä—ã - 4 –≥',
                calories: '112 –∫–∫–∞–ª/780 –∫–î–∂',
                storage: '10 –º–µ—Å—è—Ü–µ–≤',
                available: true
            }
        ],
        'pirogi-sytnye': [
            {
                id: 'pirog-ohotnichiy',
                name: '–ü–∏—Ä–æ–≥ —Å –æ–ª–µ–Ω–∏–Ω–æ–π –æ—Ö–æ—Ç–Ω–∏—á–∏–π',
                price: 880,
                unit: '/550 –≥—Ä.',
                maxQty: 8,
                image: 'ü•ß',
                imageUrl: 'images/products/pirogi-sytnye/pirog-ohotnichiy.jpg',
                composition: '–º—É–∫–∞ –≤/—Å, –æ–ª–µ–Ω–∏–Ω–∞ –≤/—Å, —Ç–æ–º–∞—Ç—ã –≤—è–ª–µ–Ω—ã–µ, –º–∞—Å–ª–æ –æ–ª–∏–≤–∫–æ–≤–æ–µ, —Å–æ–ª—å, —Å–∞—Ö–∞—Ä, —è–π—Ü–æ, –≤–æ–¥–∞, –¥—Ä–æ–∂–∂–∏ —Ö–ª–µ–±–æ–ø–µ–∫–∞—Ä–Ω—ã–µ, –ª—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π, –º–æ—Ä–∫–æ–≤—å, —Å–ø–µ—Ü–∏–∏',
                nutrition: '–ë–µ–ª–∫–∏ 11.55 –≥, –ñ–∏—Ä—ã 9.32 –≥, –£–≥–ª–µ–≤–æ–¥—ã 25.24 –≥',
                calories: '232.8 –∫–∫–∞–ª/974.1 –∫–î–∂',
                storage: '6 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'pirog-brusnika',
                name: '–ü–∏—Ä–æ–≥ —Å –æ–ª–µ–Ω–∏–Ω–æ–π –∏ –±—Ä—É—Å–Ω–∏–∫–æ–π',
                price: 880,
                unit: '/550 –≥—Ä.',
                maxQty: 8,
                image: 'ü•ß',
                imageUrl: 'images/products/pirogi-sytnye/pirog-brusnika.jpg',
                composition: '–º—É–∫–∞ –≤/—Å, –æ–ª–µ–Ω–∏–Ω–∞ –≤/—Å, –±—Ä—É—Å–Ω–∏–∫–∞, —Å–æ–µ–≤—ã–π —Å–æ—É—Å, —Å–æ–ª—å, —Å–∞—Ö–∞—Ä, —è–π—Ü–æ, –≤–æ–¥–∞, –¥—Ä–æ–∂–∂–∏ —Ö–ª–µ–±–æ–ø–µ–∫–∞—Ä–Ω—ã–µ, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ, –ª—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π, —Å–ø–µ—Ü–∏–∏',
                nutrition: '–ë–µ–ª–∫–∏ 14.02 –≥, –ñ–∏—Ä—ã 9.12 –≥, –£–≥–ª–µ–≤–æ–¥—ã 23.42 –≥',
                calories: '233.2 –∫–∫–∞–ª/917.6 –∫–î–∂',
                storage: '6 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'pirog-griby-trufel',
                name: '–ü–∏—Ä–æ–≥ —Å –æ–ª–µ–Ω–∏–Ω–æ–π, –≥—Ä–∏–±–∞–º–∏ –∏ —Ç—Ä—é—Ñ–µ–ª–µ–º',
                price: 880,
                unit: '/550 –≥—Ä.',
                maxQty: 8,
                image: 'ü•ß',
                imageUrl: 'images/products/pirogi-sytnye/pirog-griby-trufel.jpg',
                composition: '–º—É–∫–∞ –≤/—Å, –æ–ª–µ–Ω–∏–Ω–∞ –≤/—Å, —à–∞–º–ø–∏–Ω—å–æ–Ω—ã —Å–≤–µ–∂–∏–µ, —Ç—Ä—é—Ñ–µ–ª—å–Ω–∞—è –ø–∞—Å—Ç–∞, –º–∞—Å–ª–æ –æ–ª–∏–≤–∫–æ–≤–æ–µ, —Å–æ–ª—å, —Å–∞—Ö–∞—Ä, —è–π—Ü–æ, –≤–æ–¥–∞, –¥—Ä–æ–∂–∂–∏ —Ö–ª–µ–±–æ–ø–µ–∫–∞—Ä–Ω—ã–µ, –ª—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π, —Å–ø–µ—Ü–∏–∏',
                nutrition: '–ë–µ–ª–∫–∏ 13.02 –≥, –ñ–∏—Ä—ã 9.31 –≥, –£–≥–ª–µ–≤–æ–¥—ã 25.42 –≥',
                calories: '235.2 –∫–∫–∞–ª/921.4 –∫–î–∂',
                storage: '6 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'pirog-gribnoy',
                name: '–ü–∏—Ä–æ–≥ —Å –≥—Ä–∏–±–Ω—ã–º –∂—é–ª—å–µ–Ω–æ–º',
                price: 964,
                unit: '/700 –≥—Ä.',
                maxQty: 6,
                image: 'ü•ß',
                imageUrl: 'images/products/pirogi-sytnye/pirog-gribnoy.jpg',
                composition: '–º—É–∫–∞ –≤/—Å, —à–∞–º–ø–∏–Ω—å–æ–Ω—ã —Å–≤–µ–∂–∏–µ, —Å–ª–∏–≤–∫–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ, —Å–æ–ª—å, —Å–∞—Ö–∞—Ä, —è–π—Ü–æ, –≤–æ–¥–∞, –¥—Ä–æ–∂–∂–∏ —Ö–ª–µ–±–æ–ø–µ–∫–∞—Ä–Ω—ã–µ, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ, –ª—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π, —Å–ø–µ—Ü–∏–∏',
                nutrition: '–ë–µ–ª–∫–∏ 8.8 –≥, –ñ–∏—Ä—ã 8.9 –≥, –£–≥–ª–µ–≤–æ–¥—ã 22.6 –≥',
                calories: '241.2 –∫–∫–∞–ª/1009.68 –∫–î–∂',
                storage: '6 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'pirog-kuritsa-griby',
                name: '–ü–∏—Ä–æ–≥ —Å –∫—É—Ä–∏—Ü–µ–π –∏ –≥—Ä–∏–±–∞–º–∏',
                price: 980,
                unit: '/700 –≥—Ä.',
                maxQty: 6,
                image: 'ü•ß',
                imageUrl: 'images/products/pirogi-sytnye/pirog-kuritsa-griby.jpg',
                composition: '–º—É–∫–∞ –≤/—Å, –∫—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ, —à–∞–º–ø–∏–Ω—å–æ–Ω—ã —Å–≤–µ–∂–∏–µ, —Å–æ–ª—å, —Å–∞—Ö–∞—Ä, —è–π—Ü–æ, –≤–æ–¥–∞, –¥—Ä–æ–∂–∂–∏ —Ö–ª–µ–±–æ–ø–µ–∫–∞—Ä–Ω—ã–µ, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ, –ª—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π, —Å–ø–µ—Ü–∏–∏',
                nutrition: '–ë–µ–ª–∫–∏ 11.4 –≥, –ñ–∏—Ä—ã 2.8 –≥, –£–≥–ª–µ–≤–æ–¥—ã 24.5 –≥',
                calories: '255.3 –∫–∫–∞–ª/1085 –∫–î–∂',
                storage: '6 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'pirog-kartofel-griby',
                name: '–ü–∏—Ä–æ–≥ —Å –∫–∞—Ä—Ç–æ—Ñ–µ–ª–µ–º –∏ –≥—Ä–∏–±–∞–º–∏',
                price: 922,
                unit: '/700 –≥—Ä.',
                maxQty: 6,
                image: 'ü•ß',
                imageUrl: 'images/products/pirogi-sytnye/pirog-kartofel-griby.jpg',
                composition: '–º—É–∫–∞ –≤/—Å, –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å, —à–∞–º–ø–∏–Ω—å–æ–Ω—ã —Å–≤–µ–∂–∏–µ, —Å–æ–ª—å, —Å–∞—Ö–∞—Ä, —è–π—Ü–æ, –≤–æ–¥–∞, –¥—Ä–æ–∂–∂–∏ —Ö–ª–µ–±–æ–ø–µ–∫–∞—Ä–Ω—ã–µ, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ, –ª—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π, —Å–ø–µ—Ü–∏–∏',
                nutrition: '–ë–µ–ª–∫–∏ 4.6 –≥, –ñ–∏—Ä—ã 7.8 –≥, –£–≥–ª–µ–≤–æ–¥—ã 18.4 –≥',
                calories: '154.8 –∫–∫–∞–ª/904 –∫–î–∂',
                storage: '6 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'pirog-krasnaya-ryba',
                name: '–ü–∏—Ä–æ–≥ —Å –∫—Ä–∞—Å–Ω–æ–π —Ä—ã–±–æ–π',
                price: 2460,
                unit: '/700 –≥—Ä.',
                maxQty: 4,
                image: 'ü•ß',
                imageUrl: 'images/products/pirogi-sytnye/pirog-krasnaya-ryba.jpg',
                composition: '–º—É–∫–∞ –≤/—Å, —Å–µ–º–≥–∞ (–ª–æ—Å–æ—Å—å), —Å–æ–ª—å, —Å–∞—Ö–∞—Ä, —è–π—Ü–æ, –≤–æ–¥–∞, –¥—Ä–æ–∂–∂–∏ —Ö–ª–µ–±–æ–ø–µ–∫–∞—Ä–Ω—ã–µ, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ, –ª—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π, —Å–ø–µ—Ü–∏–∏',
                nutrition: '–ë–µ–ª–∫–∏ 14.9 –≥, –ñ–∏—Ä—ã 13 –≥, –£–≥–ª–µ–≤–æ–¥—ã 24.6 –≥',
                calories: '274.7 –∫–∫–∞–ª/1150.4 –∫–î–∂',
                storage: '6 –º–µ—Å—è—Ü–µ–≤',
                available: true
            }
        ],
        'pirogi-sladkie': [
            {
                id: 'pirog-yabloko-smorodina',
                name: '–ü–∏—Ä–æ–≥ —Å —è–±–ª–æ–∫–æ–º –∏ —á–µ—Ä–Ω–æ–π —Å–º–æ—Ä–æ–¥–∏–Ω–æ–π',
                price: 860,
                unit: '/700 –≥—Ä.',
                maxQty: 6,
                image: 'üßÅ',
                imageUrl: 'images/products/pirogi-sladkie/pirog-yabloko-smorodina.jpg',
                composition: '–º—É–∫–∞ –≤/—Å, —è–±–ª–æ–∫–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ, —á–µ—Ä–Ω–∞—è —Å–º–æ—Ä–æ–¥–∏–Ω–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è, —Å–æ–ª—å, —Å–∞—Ö–∞—Ä, —è–π—Ü–æ, –≤–æ–¥–∞, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ, –¥—Ä–æ–∂–∂–∏ —Ö–ª–µ–±–æ–ø–µ–∫–∞—Ä–Ω—ã–µ',
                nutrition: '–ë–µ–ª–∫–∏ 6.2 –≥, –ñ–∏—Ä—ã 5.4 –≥, –£–≥–ª–µ–≤–æ–¥—ã 52.8 –≥',
                calories: '251.4 –∫–∫–∞–ª/1163.3 –∫–î–∂',
                storage: '6 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'pirog-vishnya',
                name: '–ü–∏—Ä–æ–≥ —Å –≤–∏—à–Ω–µ–π',
                price: 885,
                unit: '/700 –≥—Ä.',
                maxQty: 6,
                image: 'üßÅ',
                imageUrl: 'images/products/pirogi-sladkie/pirog-vishnya.jpg',
                composition: '–º—É–∫–∞ –≤/—Å, –≤–∏—à–Ω—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è, —Å–æ–ª—å, —Å–∞—Ö–∞—Ä, —è–π—Ü–æ, –≤–æ–¥–∞, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ, –¥—Ä–æ–∂–∂–∏ —Ö–ª–µ–±–æ–ø–µ–∫–∞—Ä–Ω—ã–µ',
                nutrition: '–ë–µ–ª–∫–∏ 6.5 –≥, –ñ–∏—Ä—ã 5.8 –≥, –£–≥–ª–µ–≤–æ–¥—ã 52.4 –≥',
                calories: '285.4 –∫–∫–∞–ª/1195.4 –∫–î–∂',
                storage: '6 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'pirog-tvorog-klubnika',
                name: '–ü–∏—Ä–æ–≥ —Å —Ç–≤–æ—Ä–æ–≥–æ–º –∏ –∫–ª—É–±–Ω–∏–∫–æ–π',
                price: 874,
                unit: '/700 –≥—Ä.',
                maxQty: 6,
                image: 'üßÅ',
                imageUrl: 'images/products/pirogi-sladkie/pirog-tvorog-klubnika.jpg',
                composition: '–º—É–∫–∞ –≤/—Å, –∫–ª—É–±–Ω–∏–∫–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è, –∫—Ä–µ–º –≤–∞–Ω–∏–ª—å–Ω–æ-—Å–ª–∏–≤–æ—á–Ω—ã–π –∑–∞–≤–∞—Ä–Ω–æ–π, —Å–æ–ª—å, —Å–∞—Ö–∞—Ä, —è–π—Ü–æ, –≤–æ–¥–∞, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ, –¥—Ä–æ–∂–∂–∏ —Ö–ª–µ–±–æ–ø–µ–∫–∞—Ä–Ω—ã–µ',
                nutrition: '–ë–µ–ª–∫–∏ 8.3 –≥, –ñ–∏—Ä—ã 7.1 –≥, –£–≥–ª–µ–≤–æ–¥—ã 38.4 –≥',
                calories: '285.6 –∫–∫–∞–ª/1049.2 –∫–î–∂',
                storage: '6 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'pirog-tvorog-chernika',
                name: '–ü–∏—Ä–æ–≥ —Å —Ç–≤–æ—Ä–æ–≥–æ–º –∏ —á–µ—Ä–Ω–∏–∫–æ–π',
                price: 878,
                unit: '/700 –≥—Ä.',
                maxQty: 6,
                image: 'üßÅ',
                imageUrl: 'images/products/pirogi-sladkie/pirog-tvorog-chernika.jpg',
                composition: '–º—É–∫–∞ –≤/—Å, —á–µ—Ä–Ω–∏–∫–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è, –∫—Ä–µ–º –≤–∞–Ω–∏–ª—å–Ω–æ-—Å–ª–∏–≤–æ—á–Ω—ã–π –∑–∞–≤–∞—Ä–Ω–æ–π —Å–æ–ª—å, —Å–∞—Ö–∞—Ä, —è–π—Ü–æ, –≤–æ–¥–∞, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ, –¥—Ä–æ–∂–∂–∏ —Ö–ª–µ–±–æ–ø–µ–∫–∞—Ä–Ω—ã–µ',
                nutrition: '–ë–µ–ª–∫–∏ 8.2 –≥, –ñ–∏—Ä—ã 6.8 –≥, –£–≥–ª–µ–≤–æ–¥—ã 37.8 –≥',
                calories: '258.6 –∫–∫–∞–ª/1049.2 –∫–î–∂',
                storage: '6 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'pirog-tvorog-malina',
                name: '–ü–∏—Ä–æ–≥ —Å —Ç–≤–æ—Ä–æ–≥–æ–º –∏ –º–∞–ª–∏–Ω–æ–π',
                price: 880,
                unit: '/700 –≥—Ä.',
                maxQty: 6,
                image: 'üßÅ',
                imageUrl: 'images/products/pirogi-sladkie/pirog-tvorog-malina.jpg',
                composition: '–º—É–∫–∞ –≤/—Å, –º–∞–ª–∏–Ω–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è, –∫—Ä–µ–º –≤–∞–Ω–∏–ª—å–Ω–æ-—Å–ª–∏–≤–æ—á–Ω—ã–π –∑–∞–≤–∞—Ä–Ω–æ–π, —Å–æ–ª—å, —Å–∞—Ö–∞—Ä, —è–π—Ü–æ, –≤–æ–¥–∞, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ, –¥—Ä–æ–∂–∂–∏ —Ö–ª–µ–±–æ–ø–µ–∫–∞—Ä–Ω—ã–µ',
                nutrition: '–ë–µ–ª–∫–∏ 8.4 –≥, –ñ–∏—Ä—ã 7.2 –≥, –£–≥–ª–µ–≤–æ–¥—ã 38.1 –≥',
                calories: '250.8 –∫–∫–∞–ª/1050 –∫–î–∂',
                storage: '6 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'pirog-chernika',
                name: '–ü–∏—Ä–æ–≥ —Å —á–µ—Ä–Ω–∏–∫–æ–π',
                price: 885,
                unit: '/700 –≥—Ä.',
                maxQty: 6,
                image: 'üßÅ',
                imageUrl: 'images/products/pirogi-sladkie/pirog-chernika.jpg',
                composition: '–º—É–∫–∞ –≤/—Å, —á–µ—Ä–Ω–∏–∫–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è, —Å–æ–ª—å, —Å–∞—Ö–∞—Ä, —è–π—Ü–æ, –≤–æ–¥–∞, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ, –¥—Ä–æ–∂–∂–∏ —Ö–ª–µ–±–æ–ø–µ–∫–∞—Ä–Ω—ã–µ',
                nutrition: '–ë–µ–ª–∫–∏ 2.7 –≥, –ñ–∏—Ä—ã 9.9 –≥, –£–≥–ª–µ–≤–æ–¥—ã 33.4 –≥',
                calories: '245.8 –∫–∫–∞–ª/1026.18 –∫–î–∂',
                storage: '6 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'pirog-yabloko-brusnika',
                name: '–ü–∏—Ä–æ–≥ —Å —è–±–ª–æ–∫–æ–º –∏ –±—Ä—É—Å–Ω–∏–∫–æ–π',
                price: 868,
                unit: '/700 –≥—Ä.',
                maxQty: 6,
                image: 'üßÅ',
                imageUrl: 'images/products/pirogi-sladkie/pirog-yabloko-brusnika.jpg',
                composition: '–º—É–∫–∞ –≤/—Å, –±—Ä—É—Å–Ω–∏–∫–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è, —è–±–ª–æ–∫–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ, —Å–æ–ª—å, —Å–∞—Ö–∞—Ä, —è–π—Ü–æ, –≤–æ–¥–∞, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ, –¥—Ä–æ–∂–∂–∏ —Ö–ª–µ–±–æ–ø–µ–∫–∞—Ä–Ω—ã–µ',
                nutrition: '–ë–µ–ª–∫–∏ 3.5 –≥, –ñ–∏—Ä—ã 4 –≥, –£–≥–ª–µ–≤–æ–¥—ã 35.7 –≥',
                calories: '192.3 –∫–∫–∞–ª/805.25 –∫–î–∂',
                storage: '6 –º–µ—Å—è—Ü–µ–≤',
                available: true
            },
            {
                id: 'pirog-yabloko',
                name: '–ü–∏—Ä–æ–≥ —Å —è–±–ª–æ–∫–æ–º',
                price: 860,
                unit: '/700 –≥—Ä.',
                maxQty: 6,
                image: 'üßÅ',
                imageUrl: 'images/products/pirogi-sladkie/pirog-yabloko.jpg',
                composition: '–º—É–∫–∞ –≤/—Å, —è–±–ª–æ–∫–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ, —Å–æ–ª—å, —Å–∞—Ö–∞—Ä, —è–π—Ü–æ, –≤–æ–¥–∞, –º–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ, –¥—Ä–æ–∂–∂–∏ —Ö–ª–µ–±–æ–ø–µ–∫–∞—Ä–Ω—ã–µ',
                nutrition: '–ë–µ–ª–∫–∏ 9.2 –≥, –ñ–∏—Ä—ã 5.4 –≥, –£–≥–ª–µ–≤–æ–¥—ã 52.8 –≥',
                calories: '258.4 –∫–∫–∞–ª/1184.3 –∫–î–∂',
                storage: '6 –º–µ—Å—è—Ü–µ–≤',
                available: true
            }
        ]
        // ‚úÖ –ì–û–¢–û–í–û! –í–°–ï 8 –ö–ê–¢–ï–ì–û–†–ò–ô, 49 –¢–û–í–ê–†–û–í!
    };
}

// üìû –§–£–ù–ö–¶–ò–Ø –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø –ù–û–ú–ï–†–ê –¢–ï–õ–ï–§–û–ù–ê –î–õ–Ø YOOKASSA
function formatPhoneForYooKassa(phone) {
    if (!phone) return '+79000000000';
    
    // –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä
    let cleanPhone = phone.replace(/\D/g, '');
    
    // –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 8, –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ 7
    if (cleanPhone.startsWith('8')) {
        cleanPhone = '7' + cleanPhone.substring(1);
    }
    
    // –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 7 –∏ –∏–º–µ–µ—Ç 11 —Ü–∏—Ñ—Ä, –¥–æ–±–∞–≤–ª—è–µ–º +
    if (cleanPhone.startsWith('7') && cleanPhone.length === 11) {
        return '+' + cleanPhone;
    }
    
    // –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 7 –∏ –∏–º–µ–µ—Ç 10 —Ü–∏—Ñ—Ä, –¥–æ–±–∞–≤–ª—è–µ–º +7
    if (cleanPhone.startsWith('7') && cleanPhone.length === 10) {
        return '+7' + cleanPhone;
    }
    
    // –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º fallback
    logger.warn(`‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${phone}, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback`);
    return '+79000000000';
}

// üí≥ –§–£–ù–ö–¶–ò–Ø –°–û–ó–î–ê–ù–ò–Ø –ü–õ–ê–¢–ï–ñ–ê –í YOOKASSA
async function createYooKassaPayment(orderId, amount, description, customerInfo) {
    try {
        const formattedPhone = formatPhoneForYooKassa(customerInfo.phone);
        logger.debug('üí≥ –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ –ÆKassa —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', {
            amount: amount.toFixed(2) + ' RUB',
            description: description,
            customer: customerInfo.customerName,
            originalPhone: customerInfo.phone,
            formattedPhone: formattedPhone
        });
        
        const paymentData = {
            amount: {
                value: amount.toFixed(2),
                currency: 'RUB'
            },
            confirmation: {
                type: 'redirect',
                return_url: `https://tundra-miniapp-production.up.railway.app/payment/success?order=${orderId}`
            },
            capture: true,
            description: description,
            receipt: {
                customer: {
                    email: customerInfo.email || 'customer@example.com',
                    phone: formattedPhone
                },
                items: [
                    {
                        description: description,
                        quantity: '1',
                        amount: {
                            value: amount.toFixed(2),
                            currency: 'RUB'
                        },
                        vat_code: 1, // –ù–î–° 20%
                        payment_mode: 'full_payment',
                        payment_subject: 'commodity'
                    }
                ]
            },
            metadata: {
                orderId: orderId,
                customerName: customerInfo.customerName || '–ö–ª–∏–µ–Ω—Ç',
                phone: customerInfo.phone || ''
            },
            // –î–æ–±–∞–≤–ª—è–µ–º webhook URL –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            webhook_url: 'https://tundra-miniapp-production.up.railway.app/webhook/yookassa'
        };
        
        // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
        const idempotenceKey = crypto.randomUUID();
        logger.debug('üîë Idempotence Key:', idempotenceKey);
        logger.debug('üìã –î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è YooKassa:', JSON.stringify(paymentData, null, 2));
        
        const payment = await checkout.createPayment(paymentData, idempotenceKey);

        logger.info(`‚úÖ –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω –≤ –ÆKassa: ${payment.id} –Ω–∞ —Å—É–º–º—É ${amount}‚ÇΩ`);
        logger.debug(`üîó URL –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ${payment.confirmation?.confirmation_url}`);
        return payment;
    } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –ÆKassa:', error.message);
        if (error.response) {
            logger.error('üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ YooKassa:', {
                status: error.response.status,
                statusText: error.response.statusText,
                data: error.response.data
            });
        }
        throw error;
    }
}

// üî¢ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–ß–ï–¢–ß–ò–ö–ê –ó–ê–ö–ê–ó–û–í –ò–ó –ë–î
async function initializeOrderCounter() {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π ID –∑–∞–∫–∞–∑–∞ –∏–∑ –ë–î
        const result = await OrdersDB.getMaxOrderId();
        if (result && result.max_id) {
            orderCounter = parseInt(result.max_id);
            logger.info(`üî¢ –°—á–µ—Ç—á–∏–∫ –∑–∞–∫–∞–∑–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω: ${orderCounter}`);
        } else {
            orderCounter = 0;
            logger.info('üî¢ –°—á–µ—Ç—á–∏–∫ –∑–∞–∫–∞–∑–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω: 0 (–Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –≤ –ë–î)');
        }
    } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—á–µ—Ç—á–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤:', error.message);
        orderCounter = 0; // Fallback
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–∫–∞–∑–∞–º–∏
async function createOrder(orderData) {
    orderCounter++;
    const orderId = orderCounter.toString();
    
    const order = {
        id: orderId,
        status: 'new', // new, accepted, preparing, delivering, completed, cancelled, expired
        paymentStatus: 'pending', // pending, paid, cancelled, expired
        createdAt: new Date(),
        updatedAt: new Date(),
        expiresAt: new Date(Date.now() + 10 * 60 * 1000), // 10 –º–∏–Ω—É—Ç
        ...orderData
    };
    
    // üíæ –°–û–•–†–ê–ù–Ø–ï–ú –í –ë–î –ò –í –ü–ê–ú–Ø–¢–¨
    orders.set(orderId, order);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    try {
        const dbOrder = {
            orderId: order.id,
            userId: order.userId || order.telegramUserId || 'unknown',
            userName: order.customerName || '–ö–ª–∏–µ–Ω—Ç',
            phone: order.phone || '',
            deliveryZone: order.deliveryZone || 'moscow',
            address: JSON.stringify(order.address || {}),
            items: JSON.stringify(order.cartItems || []),
            totalAmount: order.totals?.total || 0,
            status: order.status,
            paymentStatus: order.paymentStatus,
            paymentId: order.paymentId || null,
            paymentUrl: order.paymentUrl || null,
            comment: order.comment || '',
            telegramUsername: order.telegramUsername || null
        };
        
        await OrdersDB.create(dbOrder);
        logger.debug(`üíæ –ó–∞–∫–∞–∑ ${orderId} —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î`);
    } catch (error) {
        logger.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ ${orderId} –≤ –ë–î:`, error.message);
    }
    
    // üî• –ó–ê–ü–£–°–ö–ê–ï–ú –¢–ê–ô–ú–ï–† –ê–í–¢–û–û–¢–ú–ï–ù–´ –ù–ê 10 –ú–ò–ù–£–¢
    const timer = setTimeout(() => {
        autoExpireOrder(orderId);
    }, 10 * 60 * 1000); // 10 –º–∏–Ω—É—Ç
    
    orderTimers.set(orderId, timer);
    
    logger.debug(`üî• –ó–∞–∫–∞–∑ ${orderId} —Å–æ–∑–¥–∞–Ω. –ê–≤—Ç–æ–æ—Ç–º–µ–Ω–∞ —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç.`);
    
    return order;
}

function updateOrderStatus(orderId, newStatus) {
    const order = orders.get(orderId);
    if (order) {
        order.status = newStatus;
        order.updatedAt = new Date();
        orders.set(orderId, order);
        return order;
    }
    return null;
}

function getOrder(orderId) {
    return orders.get(orderId);
}

function getAllOrders() {
    return Array.from(orders.values()).sort((a, b) => b.createdAt - a.createdAt);
}

// üî• –§–£–ù–ö–¶–ò–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ô –û–¢–ú–ï–ù–´ –ó–ê–ö–ê–ó–ê
function autoExpireOrder(orderId) {
    const order = orders.get(orderId);
    if (!order) {
        logger.warn(`‚ö†Ô∏è –ó–∞–∫–∞–∑ ${orderId} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∞–≤—Ç–æ–æ—Ç–º–µ–Ω—ã`);
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª –ª–∏ –∑–∞–∫–∞–∑ —É–∂–µ –æ–ø–ª–∞—á–µ–Ω
    if (order.paymentStatus === 'paid') {
        logger.debug(`‚úÖ –ó–∞–∫–∞–∑ ${orderId} —É–∂–µ –æ–ø–ª–∞—á–µ–Ω, –æ—Ç–º–µ–Ω–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞`);
        clearOrderTimer(orderId);
        return;
    }
    
    // –û—Ç–º–µ–Ω—è–µ–º –∑–∞–∫–∞–∑
    order.status = 'expired';
    order.paymentStatus = 'expired';
    order.updatedAt = new Date();
    orders.set(orderId, order);
    
    // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä
    clearOrderTimer(orderId);
    
    logger.info(`‚è∞ –ó–∞–∫–∞–∑ ${orderId} –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω (–≤—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ)`);
}

// –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ —Ç–∞–π–º–µ—Ä–∞ –∑–∞–∫–∞–∑–∞
function clearOrderTimer(orderId) {
    const timer = orderTimers.get(orderId);
    if (timer) {
        clearTimeout(timer);
        orderTimers.delete(orderId);
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–º–µ–Ω—ã —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ
function cancelOrderTimer(orderId) {
    clearOrderTimer(orderId);
    logger.debug(`üî• –¢–∞–π–º–µ—Ä –∑–∞–∫–∞–∑–∞ ${orderId} –æ—Ç–º–µ–Ω–µ–Ω (–∑–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω)`);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ (–ü–û–õ–ù–û–°–¢–¨–Æ –ë–ï–ó –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ô)
const webRoot = path.join(__dirname, 'webapp');
app.use(express.static(webRoot));

// –ü—Ä–∏–º–µ–Ω—è–µ–º CORS –∏ rate limiting —Ç–æ–ª—å–∫–æ –∫ API
app.use('/api', cors(corsOptions));
app.use('/api', limiter);
app.use('/webhook', cors(corsOptions));
app.use('/webhook', limiter);

// Health check endpoints
app.get('/health', (req, res) => {
    res.status(200).json({ 
        status: 'ok', 
        timestamp: new Date().toISOString(),
        uptime: process.uptime()
    });
});

app.get('/ping', (req, res) => {
    res.status(200).send('pong');
});

// –¢–µ—Å—Ç–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ÆKassa
app.get('/test-yookassa', async (req, res) => {
    try {
        logger.info('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ÆKassa API...');
        
        if (!config.YOOKASSA_SHOP_ID || !config.YOOKASSA_SECRET_KEY) {
            return res.status(500).json({ 
                ok: false, 
                error: '–ö–ª—é—á–∏ –ÆKassa –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã',
                shopId: config.YOOKASSA_SHOP_ID,
                secretKey: config.YOOKASSA_SECRET_KEY ? '–ï–°–¢–¨' : '–ù–ï–¢'
            });
        }
        
        // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
        const meResponse = await axios.get('https://api.yookassa.ru/v3/me', {
            auth: {
                username: config.YOOKASSA_SHOP_ID,
                password: config.YOOKASSA_SECRET_KEY
            },
            timeout: 10000
        });
        
        logger.info('‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω');
        
        // –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
        const testPaymentData = {
            amount: {
                value: "1.00",
                currency: "RUB"
            },
            confirmation: {
                type: "redirect",
                return_url: "https://tundra-miniapp-production.up.railway.app"
            },
            description: "–¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API",
            metadata: {
                test: "true"
            }
        };
        
        const testIdempotenceKey = crypto.randomUUID();
        const paymentResponse = await axios.post('https://api.yookassa.ru/v3/payments', testPaymentData, {
            headers: {
                'Content-Type': 'application/json',
                'Idempotence-Key': testIdempotenceKey
            },
            auth: {
                username: config.YOOKASSA_SHOP_ID,
                password: config.YOOKASSA_SECRET_KEY
            },
            timeout: 30000
        });
        
        logger.info('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω:', paymentResponse.data.id);
        
        res.json({
            ok: true,
            message: '–ÆKassa —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ',
            accountInfo: meResponse.data,
            testPayment: {
                id: paymentResponse.data.id,
                status: paymentResponse.data.status,
                confirmationUrl: paymentResponse.data.confirmation?.confirmation_url
            }
        });
        
    } catch (error) {
        logger.error('‚ùå –¢–µ—Å—Ç –ÆKassa –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è:', error.message);
        
        res.status(500).json({
            ok: false,
            error: error.message,
            details: error.response?.data || null,
            status: error.response?.status || null,
            shopId: config.YOOKASSA_SHOP_ID,
            secretKeyLength: config.YOOKASSA_SECRET_KEY?.length || 0
        });
    }
});

// Webhook –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç –ÆKassa
app.post('/webhook/yookassa', express.raw({type: 'application/json'}), async (req, res) => {
    try {
        logger.info('üîî WEBHOOK: –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç –ÆKassa');
        logger.info('üì¶ WEBHOOK: –¢–∏–ø req.body:', typeof req.body);
        logger.info('üì¶ WEBHOOK: req.body:', req.body);
        logger.info('üì¶ WEBHOOK: Headers:', req.headers);
        
        let notification;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –∏ –ø–∞—Ä—Å–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
        if (typeof req.body === 'string') {
            notification = JSON.parse(req.body);
        } else if (Buffer.isBuffer(req.body)) {
            notification = JSON.parse(req.body.toString());
        } else if (typeof req.body === 'object' && req.body !== null) {
            // –ï—Å–ª–∏ —É–∂–µ –æ–±—ä–µ–∫—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å
            notification = req.body;
        } else {
            throw new Error(`–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö: ${typeof req.body}`);
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (YooKassa –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç type: 'notification' –∏ event: 'payment.succeeded')
        logger.info('üîç WEBHOOK: –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:', {
            type: notification.type,
            event: notification.event,
            hasObject: !!notification.object
        });
        
        if (notification.type === 'notification' && notification.event === 'payment.succeeded') {
            const payment = notification.object;
            logger.info('‚úÖ WEBHOOK: –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω:', payment.id);
            logger.info('üîç WEBHOOK: –î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞:', {
                id: payment.id,
                status: payment.status,
                amount: payment.amount,
                metadata: payment.metadata
            });
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            if (payment.metadata && payment.metadata.orderId) {
                const orderId = payment.metadata.orderId;
                logger.info('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞:', orderId);
                
                try {
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
                    await OrdersDB.update(orderId, { 
                        status: 'accepted',
                        payment_status: 'paid',
                        payment_id: payment.id
                    });
                    
                    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∫—É–ø–æ–∫
                    const order = await OrdersDB.getById(orderId);
                    if (order) {
                        // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∫—É–ø–æ–∫
                        await PurchaseHistoryDB.create({
                            order_id: orderId,
                            user_id: order.user_id,
                            customer_name: order.user_name,
                            phone: order.phone,
                            total_amount: parseFloat(payment.amount.value),
                            items_count: Array.isArray(order.items) ? order.items.length : JSON.parse(order.items || '[]').length,
                            items_data: typeof order.items === 'string' ? order.items : JSON.stringify(order.items),
                            payment_id: payment.id,
                            delivery_zone: order.delivery_zone,
                            address_data: order.address // address —É–∂–µ —Å—Ç—Ä–æ–∫–∞ JSON
                        });
                        
                        logger.info('‚úÖ –ó–∞–∫–∞–∑ –æ–±–Ω–æ–≤–ª–µ–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∫—É–ø–æ–∫');
                        logger.debug('üìä –î–∞–Ω–Ω—ã–µ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∫—É–ø–æ–∫:', {
                            orderId: orderId,
                            userId: order.user_id,
                            totalAmount: parseFloat(payment.amount.value),
                            itemsCount: Array.isArray(order.items) ? order.items.length : JSON.parse(order.items || '[]').length
                        });
                        
                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –±–æ—Ç)
                        logger.debug('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram –≤ webhook:', {
                            hasToken: !!config.TELEGRAM_BOT_TOKEN,
                            tokenLength: config.TELEGRAM_BOT_TOKEN?.length || 0,
                            hasChatId: !!config.TELEGRAM_ADMIN_CHAT_ID,
                            chatId: config.TELEGRAM_ADMIN_CHAT_ID
                        });
                        
                        if (config.TELEGRAM_BOT_TOKEN && config.TELEGRAM_ADMIN_CHAT_ID) {
                            try {
                                // –ü–∞—Ä—Å–∏–º –∞–¥—Ä–µ—Å –∏–∑ JSON —Å—Ç—Ä–æ–∫–∏
                                const addressData = typeof order.address === 'string' ? JSON.parse(order.address) : order.address;
                                
                                // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å
                                const fullAddress = [
                                    addressData.street,
                                    addressData.house,
                                    addressData.apartment && `–∫–≤. ${addressData.apartment}`,
                                    addressData.floor && `—ç—Ç. ${addressData.floor}`,
                                    addressData.entrance && `–ø–æ–¥. ${addressData.entrance}`,
                                    addressData.intercom && `–¥–æ–º–æ—Ñ–æ–Ω: ${addressData.intercom}`
                                ].filter(Boolean).join(', ');
                                
                                // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞
                                let orderItems = '–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω';
                                let itemsArray = [];
                                
                                if (order.items) {
                                    if (typeof order.items === 'string') {
                                        try {
                                            itemsArray = JSON.parse(order.items);
                                        } catch (e) {
                                            logger.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ order.items:', e.message);
                                            itemsArray = [];
                                        }
                                    } else if (Array.isArray(order.items)) {
                                        itemsArray = order.items;
                                    }
                                }
                                
                                if (Array.isArray(itemsArray) && itemsArray.length > 0) {
                                    orderItems = itemsArray.map(item => 
                                        `‚Ä¢ ${item.name} x${item.quantity} - ${item.price * item.quantity}‚ÇΩ`
                                    ).join('\n');
                                }
                                
                                const message = 
                                    `üéâ <b>–ó–ê–ö–ê–ó –û–ü–õ–ê–ß–ï–ù!</b>\n` +
                                    `üìã –ù–æ–º–µ—Ä: #${orderId}\n` +
                                    `üë§ –ö–ª–∏–µ–Ω—Ç: ${order.user_name}\n` +
                                    `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${order.phone}\n` +
                                    `üí∞ –°—É–º–º–∞: ${payment.amount.value} ${payment.amount.currency}\n` +
                                    `üí≥ ID –ø–ª–∞—Ç–µ–∂–∞: ${payment.id}\n` +
                                    `üìç –ó–æ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: ${order.delivery_zone}\n` +
                                    `üè† –ê–¥—Ä–µ—Å: ${fullAddress}\n` +
                                    `üì¶ <b>–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:</b>\n${orderItems}` +
                                    (order.comment ? `\nüí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${order.comment}` : '');
                                
                                // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
                                const inlineKeyboard = {
                                    inline_keyboard: [
                                        [
                                            { text: 'üü° –ü—Ä–∏–Ω—è—Ç—å', callback_data: `accept_${orderId}` },
                                            { text: 'üî¥ –û—Ç–º–µ–Ω–∏—Ç—å', callback_data: `cancel_${orderId}` }
                                        ],
                                        [
                                            { text: 'üöö –í –¥–æ—Å—Ç–∞–≤–∫–µ', callback_data: `delivering_${orderId}` },
                                            { text: '‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data: `complete_${orderId}` }
                                        ]
                                    ]
                                };
                                
                                await axios.post(`https://api.telegram.org/bot${config.TELEGRAM_BOT_TOKEN}/sendMessage`, {
                                    chat_id: config.TELEGRAM_ADMIN_CHAT_ID,
                                    text: message,
                                    parse_mode: 'HTML',
                                    reply_markup: inlineKeyboard
                                });
                                
                                logger.info('üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–ø–ª–∞—á–µ–Ω–Ω–æ–º –∑–∞–∫–∞–∑–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');
                            } catch (telegramError) {
                                logger.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', telegramError.message);
                                if (telegramError.response?.status === 401) {
                                    logger.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Telegram: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞');
                                } else if (telegramError.response?.status === 400) {
                                    logger.error('‚ùå –û—à–∏–±–∫–∞ Telegram: –Ω–µ–≤–µ—Ä–Ω—ã–π Chat ID');
                                }
                            }
                        } else {
                            logger.warn('‚ö†Ô∏è Telegram –±–æ—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
                            logger.warn(`   –¢–æ–∫–µ–Ω: ${config.TELEGRAM_BOT_TOKEN ? '–µ—Å—Ç—å' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
                            logger.warn(`   Chat ID: ${config.TELEGRAM_ADMIN_CHAT_ID ? '–µ—Å—Ç—å' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
                        }
                    }
                } catch (dbError) {
                    logger.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤ –ë–î:', dbError.message);
                }
            }
        } else if (notification.type === 'notification' && notification.event === 'payment.canceled') {
            const payment = notification.object;
            logger.info('‚ùå –ü–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω:', payment.id);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
            if (payment.metadata && payment.metadata.orderId) {
                await OrdersDB.update(payment.metadata.orderId, { 
                    status: 'canceled',
                    paymentId: payment.id
                });
                logger.info('üîÑ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ "–æ—Ç–º–µ–Ω–µ–Ω"');
            }
        } else {
            logger.warn('‚ö†Ô∏è WEBHOOK: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', {
                type: notification.type,
                event: notification.event,
                fullNotification: notification
            });
        }
        
        logger.info('‚úÖ WEBHOOK: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        res.status(200).send('OK');
    } catch (error) {
        logger.error('‚ùå WEBHOOK: –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook:', error.message);
        logger.error('‚ùå WEBHOOK: –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack);
        logger.error('‚ùå WEBHOOK: req.body —Ç–∏–ø:', typeof req.body);
        logger.error('‚ùå WEBHOOK: req.body —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:', req.body);
        res.status(500).send('Error');
    }
});

// –¢–µ—Å—Ç–æ–≤—ã–π endpoint –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook
app.get('/test-webhook', (req, res) => {
    logger.info('üß™ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ webhook endpoint');
    res.json({
        message: 'Webhook endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç',
        timestamp: new Date().toISOString(),
        url: '/webhook/yookassa'
    });
});

// API –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
app.post('/api/orders', validateOrderData, async (req, res) => {
    logger.info('üî• –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞');
    let order = null;
    
    // –†–µ–∂–∏–º –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ - –±–µ–∑ –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞
    
    try {
        const orderData = req.body;
        
        // –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑
        order = await createOrder(orderData);
        logger.info(`‚úÖ –ó–∞–∫–∞–∑ #${order.id} —Å–æ–∑–¥–∞–Ω, —Å—É–º–º–∞: ${order.totals?.total || 0}‚ÇΩ`);
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: Telegram > —Ñ–æ—Ä–º–∞ > fallback)
        const telegramUser = orderData.telegramUser;
        
        const customerName = telegramUser?.full_name || 
                           telegramUser?.first_name || 
                           orderData.customerName || 
                           '–ö–ª–∏–µ–Ω—Ç';
        
        // üí≥ –°–û–ó–î–ê–ï–ú –ü–õ–ê–¢–ï–ñ –í YOOKASSA
        const totalAmount = order.totals?.total || 0;
        const description = `–ó–∞–∫–∞–∑ #${order.id} - ${customerName}`;
        
        if (!config.YOOKASSA_SHOP_ID || !config.YOOKASSA_SECRET_KEY) {
            logger.error('‚ùå –ÆKassa –∫–ª—é—á–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
            throw new Error('–ÆKassa –∫–ª—é—á–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
        }
        
        if (!checkout) {
            logger.error('‚ùå –ÆKassa –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
            throw new Error('–ÆKassa –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
        }
        
        const customerInfo = {
            customerName: customerName,
            phone: order.phone || '',
            telegramUsername: telegramUser?.username || null
        };
        
        // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –≤ –∑–∞–∫–∞–∑
        order.customerName = customerInfo.customerName;
        order.telegramUsername = customerInfo.telegramUsername;
        order.telegramUserId = telegramUser?.id || null; // –°–æ—Ö—Ä–∞–Ω—è–µ–º Telegram ID –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        
        // –°–æ–∑–¥–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –ø–ª–∞—Ç–µ–∂ —á–µ—Ä–µ–∑ –ÆKassa
        const payment = await createYooKassaPayment(order.id, totalAmount, description, customerInfo);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–ª–∞—Ç–µ–∂–∞ –≤ –∑–∞–∫–∞–∑–µ
        order.paymentId = payment.id;
        order.paymentUrl = payment.confirmation.confirmation_url;
        orders.set(order.id, order);
        
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑–∞
        logger.info(`üìù –ó–∞–∫–∞–∑ ${order.id} —Å–æ–∑–¥–∞–Ω, –æ–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≤ –ë–î
        try {
            const updateData = {
                paymentId: order.paymentId,
                paymentUrl: order.paymentUrl,
                status: order.status
            };
            await OrdersDB.update(order.id, updateData);
        } catch (dbError) {
            logger.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤ –ë–î:`, dbError.message);
        }
        
        logger.info(`‚úÖ –ó–∞–∫–∞–∑ #${order.id} –∏ –ø–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ`);
        
        const response = { 
            ok: true, 
            orderId: order.id,
            paymentUrl: payment.confirmation.confirmation_url,
            paymentId: payment.id,
            amount: totalAmount
        };
        
        res.json(response);
    } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞:', error.message);
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É –∫–ª–∏–µ–Ω—Ç—É
        res.status(500).json({ 
            ok: false, 
            error: '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞',
            message: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
        });
    }
});

// API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∫—É–ø–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞
app.get('/api/purchases/:userId', async (req, res) => {
    try {
        const { userId } = req.params;
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∫—É–ø–æ–∫ –∏–∑ –ë–î
        const purchases = await PurchaseHistoryDB.getByUserId(userId);
        
        // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏
        const totalPurchases = purchases.length;
        const totalSpent = purchases.reduce((sum, purchase) => sum + (purchase.totalAmount || 0), 0);
        
        // üèÜ –õ–û–ì–ò–ö–ê –ö–ê–†–¢–´ –õ–û–Ø–õ–¨–ù–û–°–¢–ò –ü–û –£–†–û–í–ù–Ø–ú
        let loyaltyLevel, currentDiscount, nextLevelTarget, nextLevelProgress;
        
        if (totalSpent < 10000) {
            // üíú 0‚ÇΩ - 9,999‚ÇΩ ‚Üí 0% —Å–∫–∏–¥–∫–∞
            loyaltyLevel = 0;
            currentDiscount = 0;
            nextLevelTarget = 10000;
            nextLevelProgress = (totalSpent / 10000) * 100;
        } else if (totalSpent < 25000) {
            // ‚≠ê 10,000‚ÇΩ - 24,999‚ÇΩ ‚Üí 3% —Å–∫–∏–¥–∫–∞
            loyaltyLevel = 1;
            currentDiscount = 3;
            nextLevelTarget = 25000;
            nextLevelProgress = ((totalSpent - 10000) / (25000 - 10000)) * 100;
        } else if (totalSpent < 50000) {
            // ‚≠ê 25,000‚ÇΩ - 49,999‚ÇΩ ‚Üí 5% —Å–∫–∏–¥–∫–∞
            loyaltyLevel = 2;
            currentDiscount = 5;
            nextLevelTarget = 50000;
            nextLevelProgress = ((totalSpent - 25000) / (50000 - 25000)) * 100;
        } else {
            // ‚≠ê 50,000‚ÇΩ+ ‚Üí 10% —Å–∫–∏–¥–∫–∞
            loyaltyLevel = 3;
            currentDiscount = 10;
            nextLevelTarget = null; // –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
            nextLevelProgress = 100;
        }
        
        res.json({
            ok: true,
            purchases,
            stats: {
                totalPurchases,
                totalSpent,
                loyaltyLevel,
                currentDiscount,
                nextLevelProgress: Math.round(nextLevelProgress),
                nextLevelTarget,
                levelName: loyaltyLevel === 0 ? "–ù–æ–≤–∏—á–æ–∫" : 
                          loyaltyLevel === 1 ? "–ë—Ä–æ–Ω–∑–∞" :
                          loyaltyLevel === 2 ? "–°–µ—Ä–µ–±—Ä–æ" : "–ó–æ–ª–æ—Ç–æ"
            }
        });
        
    } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∫—É–ø–æ–∫:', error.message);
        res.status(500).json({ ok: false, error: error.message });
    }
});

// API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤
app.get('/api/orders', (req, res) => {
    try {
        const allOrders = getAllOrders();
        res.json({ ok: true, orders: allOrders });
    } catch (error) {
        logger.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤:', error.message);
        res.status(500).json({ ok: false, error: error.message });
    }
});

// API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
app.get('/api/orders/:orderId', async (req, res) => {
    try {
        const { orderId } = req.params;
        logger.info(`üîç API: –ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ ${orderId}`);
        
        // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –ø–∞–º—è—Ç–∏ (–¥–ª—è –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤)
        let order = getOrder(orderId);
        logger.info(`üîç API: –ó–∞–∫–∞–∑ ${orderId} –≤ –ø–∞–º—è—Ç–∏:`, order ? '–Ω–∞–π–¥–µ–Ω' : '–Ω–µ –Ω–∞–π–¥–µ–Ω');
        
        // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–º—è—Ç–∏, –∏—â–µ–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        if (!order) {
            logger.info(`üîç API: –ò—â–µ–º –∑–∞–∫–∞–∑ ${orderId} –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...`);
            order = await OrdersDB.getById(orderId);
            if (order) {
                logger.info(`‚úÖ API: –ó–∞–∫–∞–∑ ${orderId} –Ω–∞–π–¥–µ–Ω –≤ –ë–î:`, {
                    status: order.status,
                    payment_status: order.payment_status,
                    total_amount: order.total_amount
                });
                
                // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î –≤ —Ñ–æ—Ä–º–∞—Ç, –æ–∂–∏–¥–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç–æ–º
                order = {
                    id: order.id,
                    status: order.status,
                    paymentStatus: order.payment_status,
                    totals: {
                        total: parseFloat(order.total_amount || 0)
                    },
                    items: typeof order.items === 'string' ? JSON.parse(order.items) : order.items,
                    address: typeof order.address === 'string' ? JSON.parse(order.address) : order.address,
                    phone: order.phone,
                    customerName: order.user_name,
                    createdAt: order.created_at
                };
            } else {
                logger.warn(`‚ùå API: –ó–∞–∫–∞–∑ ${orderId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î`);
            }
        }
        
        if (order) {
            logger.info(`‚úÖ API: –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–∫–∞–∑ ${orderId}:`, {
                status: order.status,
                paymentStatus: order.paymentStatus,
                total: order.totals?.total
            });
            res.json({ ok: true, order });
        } else {
            logger.warn(`‚ùå API: –ó–∞–∫–∞–∑ ${orderId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            res.status(404).json({ ok: false, error: '–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω' });
        }
    } catch (error) {
        logger.error('‚ùå API: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞:', error.message);
        res.status(500).json({ ok: false, error: error.message });
    }
});

// API –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
app.put('/api/orders/:orderId/status', (req, res) => {
    try {
        const { status } = req.body;
        const orderId = req.params.orderId;
        
        // üî• –û–ë–†–ê–ë–ê–¢–´–í–ê–ï–ú –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –°–¢–ê–¢–£–°–´
        if (status === 'cancelled' || status === 'expired') {
            // –û—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–µ—Ä –ø—Ä–∏ —Ä—É—á–Ω–æ–π –æ—Ç–º–µ–Ω–µ –∏–ª–∏ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
            clearOrderTimer(orderId);
        }
        
        const order = updateOrderStatus(orderId, status);
        
        if (order) {
            logger.info(`üìù –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ ${orderId} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: ${status}`);
            res.json({ ok: true, order });
        } else {
            res.status(404).json({ ok: false, error: '–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω' });
        }
    } catch (error) {
        logger.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', error.message);
        res.status(500).json({ ok: false, error: error.message });
    }
});

// Webhook –¥–ª—è Telegram
app.post('/api/telegram/webhook', (req, res) => {
    try {
        const { message, callback_query } = req.body;
        
        if (callback_query) {
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ inline-–∫–Ω–æ–ø–∫—É
            handleCallbackQuery(callback_query);
        } else if (message) {
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            logger.debug('–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', message.text);
        }
        
        res.json({ ok: true });
    } catch (error) {
        logger.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Telegram webhook:', error.message);
        res.status(500).json({ ok: false, error: error.message });
    }
});

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback query (–Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏)
async function handleCallbackQuery(callbackQuery) {
    try {
        const { data, message, from } = callbackQuery;
        const [action, orderId] = data.split('_');
        
        logger.debug(`–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è: ${action} –¥–ª—è –∑–∞–∫–∞–∑–∞ ${orderId}`);
        
        let order = getOrder(orderId);
        if (!order) {
            logger.error(`–ó–∞–∫–∞–∑ ${orderId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            return;
        }
        
        let newStatus, statusText, statusEmoji;
        
        switch (action) {
            case 'accept':
                newStatus = 'accepted';
                statusText = '–ü—Ä–∏–Ω—è—Ç';
                statusEmoji = 'üü°';
                break;
            case 'cancel':
                newStatus = 'cancelled';
                statusText = '–û—Ç–º–µ–Ω–µ–Ω';
                statusEmoji = 'üî¥';
                break;
            case 'preparing':
                newStatus = 'preparing';
                statusText = '–ì–æ—Ç–æ–≤–∏—Ç—Å—è';
                statusEmoji = 'üîµ';
                break;
            case 'delivering':
                newStatus = 'delivering';
                statusText = '–í –¥–æ—Å—Ç–∞–≤–∫–µ';
                statusEmoji = 'üöö';
                break;
            case 'completed':
                newStatus = 'completed';
                statusText = '–î–æ—Å—Ç–∞–≤–ª–µ–Ω';
                statusEmoji = '‚úÖ';
                break;
            default:
                logger.error(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ${action}`);
                return;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –≤ –ø–∞–º—è—Ç–∏
        order = updateOrderStatus(orderId, newStatus);
        
        // üî• –û–ë–ù–û–í–õ–Ø–ï–ú –°–¢–ê–¢–£–° –í –ë–ê–ó–ï –î–ê–ù–ù–´–•
        try {
            await OrdersDB.update(orderId, { 
                status: newStatus,
                updated_at: new Date().toISOString()
            });
            logger.info(`üíæ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ ${orderId} –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –ë–î: ${newStatus}`);
        } catch (dbError) {
            logger.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤ –ë–î:`, dbError.message);
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω-–≥—Ä—É–ø–ø–µ
        await updateOrderMessage(message.chat.id, message.message_id, order, newStatus);
        
        // üì± –û–¢–ü–†–ê–í–õ–Ø–ï–ú –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –ö–õ–ò–ï–ù–¢–£
        if (order.telegramUserId && config.TELEGRAM_BOT_TOKEN) {
            try {
                const clientMessage = `üì¶ <b>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ #${orderId}</b>\n\n` +
                    `–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: ${statusEmoji} <b>${statusText}</b>\n\n` +
                    `üí∞ –°—É–º–º–∞: ${order.totals?.total || 0}‚ÇΩ\n` +
                    `üìç –ê–¥—Ä–µ—Å: ${order.address?.street}, ${order.address?.house}`;
                
                await axios.post(`https://api.telegram.org/bot${config.TELEGRAM_BOT_TOKEN}/sendMessage`, {
                    chat_id: order.telegramUserId,
                    text: clientMessage,
                    parse_mode: 'HTML'
                });
                
                logger.info(`üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è –∑–∞–∫–∞–∑–∞ ${orderId}`);
            } catch (error) {
                logger.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—É:`, error.message);
            }
        } else {
            logger.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É: telegramUserId=${order.telegramUserId}, token=${!!config.TELEGRAM_BOT_TOKEN}`);
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        await axios.post(`https://api.telegram.org/bot${config.TELEGRAM_BOT_TOKEN}/answerCallbackQuery`, {
            callback_query_id: callbackQuery.id,
            text: `–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #${orderId} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ "${statusText}"`
        });
        
        logger.info(`–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ ${orderId} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ ${newStatus}`);
        
    } catch (error) {
        logger.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback query:', error.message);
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–∫–∞–∑–æ–º
async function updateOrderMessage(chatId, messageId, order, newStatus) {
    try {
        const statusEmojis = {
            'new': '‚è≥',
            'accepted': 'üü°',
            'preparing': 'üîµ',
            'delivering': 'üöö',
            'completed': '‚úÖ',
            'cancelled': 'üî¥'
        };
        
        const statusTexts = {
            'new': '–ù–æ–≤—ã–π',
            'accepted': '–ü—Ä–∏–Ω—è—Ç',
            'preparing': '–ì–æ—Ç–æ–≤–∏—Ç—Å—è',
            'delivering': '–í –¥–æ—Å—Ç–∞–≤–∫–µ',
            'completed': '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
            'cancelled': '–û—Ç–º–µ–Ω–µ–Ω'
        };
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        const message = `üÜï –ó–ê–ö–ê–ó #${order.id} - ${statusEmojis[newStatus]} ${statusTexts[newStatus]}

üë§ ${order.customerName || '–ö–ª–∏–µ–Ω—Ç'}
üìç ${order.address.street}, ${order.address.house}${order.address.apartment ? `, –∫–≤.${order.address.apartment}` : ''} (${order.deliveryZone === 'moscow' ? '–ú–æ—Å–∫–≤–∞' : '–ú–û'})
üí∞ ${order.totals?.total || 0}‚ÇΩ
üì¶ ${order.cartItems?.length || 0} —Ç–æ–≤–∞—Ä–æ–≤

üìã –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:
${order.cartItems.map(item => `‚Ä¢ ${item.name} x${item.quantity} - ${item.price * item.quantity}‚ÇΩ`).join('\n')}

üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${order.phone}
üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${order.comment || '–Ω–µ—Ç'}

[üü° –ü—Ä–∏–Ω—è—Ç—å] [üîµ –ì–æ—Ç–æ–≤–∏—Ç—Å—è] [üöö –î–æ—Å—Ç–∞–≤–∫–µ] [‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω]`;

        // –°–æ–∑–¥–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
        let inlineKeyboard;
        if (newStatus === 'new') {
            inlineKeyboard = {
                inline_keyboard: [
                    [
                        { text: 'üü° –ü—Ä–∏–Ω—è—Ç—å', callback_data: `accept_${order.id}` },
                        { text: 'üî¥ –û—Ç–º–µ–Ω–∏—Ç—å', callback_data: `cancel_${order.id}` }
                    ]
                ]
            };
        } else if (newStatus === 'accepted') {
            inlineKeyboard = {
                inline_keyboard: [
                    [
                        { text: 'üîµ –ì–æ—Ç–æ–≤–∏—Ç—Å—è', callback_data: `preparing_${order.id}` },
                        { text: 'üî¥ –û—Ç–º–µ–Ω–∏—Ç—å', callback_data: `cancel_${order.id}` }
                    ]
                ]
            };
        } else if (newStatus === 'preparing') {
            inlineKeyboard = {
                inline_keyboard: [
                    [
                        { text: 'üöö –í –¥–æ—Å—Ç–∞–≤–∫—É', callback_data: `delivering_${order.id}` }
                    ]
                ]
            };
        } else if (newStatus === 'delivering') {
            inlineKeyboard = {
                inline_keyboard: [
                    [
                        { text: '‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω', callback_data: `completed_${order.id}` }
                    ]
                ]
            };
        } else {
            // –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∏–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ —É–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏
            inlineKeyboard = { inline_keyboard: [] };
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await axios.post(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/editMessageText`, {
            chat_id: chatId,
            message_id: messageId,
            text: message,
            parse_mode: 'HTML',
            reply_markup: inlineKeyboard
        });
        
    } catch (error) {
        logger.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è:', error.message);
    }
}

// Webhook –¥–ª—è –ÆKassa - –£–î–ê–õ–ï–ù (–¥—É–±–ª–∏—Ä—É–µ—Ç /webhook/yookassa)

// –§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π - –£–î–ê–õ–ï–ù–´ (–ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π webhook)

// API –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ –ÆKassa - –£–î–ê–õ–ï–ù (–¥—É–±–ª–∏—Ä—É–µ—Ç /api/orders)

// üîß MIDDLEWARE –î–õ–Ø –ó–ê–©–ò–¢–´ –ê–î–ú–ò–ù API
function requireAdminAuth(req, res, next) {
    const providedPassword = req.headers['x-admin-password'] || req.query.password;
    const adminPassword = config.ADMIN_PASSWORD;
    
    if (providedPassword !== adminPassword) {
        return res.status(401).json({ 
            ok: false, 
            error: 'Unauthorized. Admin password required.' 
        });
    }
    
    next();
}

// üîß MIDDLEWARE –î–õ–Ø –í–ê–õ–ò–î–ê–¶–ò–ò –î–ê–ù–ù–´–•
function validateOrderData(req, res, next) {
    const { cartItems, address, phone, customerName, deliveryZone } = req.body;
    
    // –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    logger.debug('üîç –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–∫–∞–∑–∞:', {
        cartItems: cartItems?.length || 0,
        address: address ? '–µ—Å—Ç—å' : '–Ω–µ—Ç',
        phone: phone ? '–µ—Å—Ç—å' : '–Ω–µ—Ç',
        customerName: customerName ? '–µ—Å—Ç—å' : '–Ω–µ—Ç',
        deliveryZone: deliveryZone || '–Ω–µ—Ç'
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    if (!cartItems || !Array.isArray(cartItems) || cartItems.length === 0) {
        logger.error('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è: –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞');
        return res.status(400).json({
            ok: false,
            error: '–ö–æ—Ä–∑–∏–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π'
        });
    }
    
    if (!address || !address.street || !address.house) {
        logger.error('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è: –ê–¥—Ä–µ—Å –Ω–µ–ø–æ–ª–Ω—ã–π:', address);
        return res.status(400).json({
            ok: false,
            error: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏'
        });
    }
    
    if (!phone || typeof phone !== 'string' || phone.trim().length < 10) {
        logger.error('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è: –¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π:', phone);
        return res.status(400).json({
            ok: false,
            error: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
        });
    }
    
    // –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ (–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∏–∑ frontend)
    // if (!customerName || typeof customerName !== 'string' || customerName.trim().length < 2) {
    //     logger.error('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è: –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ:', customerName);
    //     return res.status(400).json({
    //         ok: false,
    //         error: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞'
    //     });
    // }
    
    if (!deliveryZone || !['moscow', 'mo'].includes(deliveryZone)) {
        logger.error('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è: –ó–æ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è:', deliveryZone);
        return res.status(400).json({
            ok: false,
            error: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –∑–æ–Ω—É –¥–æ—Å—Ç–∞–≤–∫–∏'
        });
    }
    
    // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ
    for (const item of cartItems) {
        if (!item.productId || !item.name || !item.price || !item.quantity) {
            logger.error('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è: –¢–æ–≤–∞—Ä –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π:', item);
            return res.status(400).json({
                ok: false,
                error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ'
            });
        }
        
        if (typeof item.price !== 'number' || item.price <= 0) {
            logger.error('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è: –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è:', item.price);
            return res.status(400).json({
                ok: false,
                error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞'
            });
        }
        
        if (typeof item.quantity !== 'number' || item.quantity <= 0 || item.quantity > 50) {
            logger.error('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ:', item.quantity);
            return res.status(400).json({
                ok: false,
                error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞'
            });
        }
    }
    
    logger.info('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–∫–∞–∑–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ');
    next();
}

// Middleware –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
function validateAdminData(req, res, next) {
    const { products } = req.body;
    
    if (!products || typeof products !== 'object') {
        return res.status(400).json({ 
            ok: false, 
            error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤' 
        });
    }
    
    next();
}

// Middleware –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ ID —Ç–æ–≤–∞—Ä–∞
function validateProductId(req, res, next) {
    const { productId } = req.params;
    
    if (!productId || typeof productId !== 'string' || productId.trim().length === 0) {
        return res.status(400).json({ 
            ok: false, 
            error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID —Ç–æ–≤–∞—Ä–∞' 
        });
    }
    
    next();
}

// üîß API –î–õ–Ø –û–°–ù–û–í–ù–û–ì–û –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø—É–±–ª–∏—á–Ω—ã–π API)
app.get('/api/products', async (req, res) => {
    try {
        // üóÑÔ∏è –ó–ê–ì–†–£–ñ–ê–ï–ú –ò–ó –ë–ê–ó–´ –î–ê–ù–ù–´–•
        let allProducts = await AdminProductsDB.loadAll();
        
        // –ï—Å–ª–∏ –≤ –ë–î –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–∞–º—è—Ç–∏
        if (Object.keys(allProducts).length === 0 && adminProducts.size > 0) {
            allProducts = Object.fromEntries(adminProducts);
        }
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
        const productsObj = {};
        for (const [categoryId, categoryProducts] of Object.entries(allProducts)) {
            const availableProducts = categoryProducts.filter(product => product.available !== false);
            if (availableProducts.length > 0) {
                productsObj[categoryId] = availableProducts;
            }
        }
        
        res.json({ ok: true, products: productsObj });
        
    } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤:', error.message);
        res.status(500).json({ ok: false, error: error.message });
    }
});

// üîß API –î–õ–Ø –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
app.get('/api/admin/orders', requireAdminAuth, async (req, res) => {
    try {
        const orders = await OrdersDB.getAll();
        logger.info(`üìã –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${orders.length} –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏`);
        res.json({ ok: true, orders });
    } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤:', error.message);
        res.status(500).json({ ok: false, error: error.message });
    }
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤—Å–µ –∑–∞–∫–∞–∑—ã –∫—Ä–æ–º–µ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö)
app.get('/api/orders/user/:userId', async (req, res) => {
    try {
        const { userId } = req.params;
        const orders = await OrdersDB.getByUserId(userId);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã –∫—Ä–æ–º–µ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö
        const activeOrders = orders.filter(order => order.status !== 'cancelled' && order.status !== 'expired');
        
        logger.info(`üìã –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${activeOrders.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
        res.json({ ok: true, orders: activeOrders });
    } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error.message);
        res.status(500).json({ ok: false, error: error.message });
    }
});

// –î—É–±–ª–∏—Ä—É—é—â–∏–π—Å—è endpoint —É–¥–∞–ª–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π /api/orders/:orderId –≤—ã—à–µ

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
app.get('/api/admin/products', requireAdminAuth, async (req, res) => {
    try {
        // üóÑÔ∏è –ó–ê–ì–†–£–ñ–ê–ï–ú –ò–ó –ë–ê–ó–´ –î–ê–ù–ù–´–•
        let products = await AdminProductsDB.loadAll();
        
        // üîÑ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –¢–û–õ–¨–ö–û –ï–°–õ–ò –ë–î –ü–û–õ–ù–û–°–¢–¨–Æ –ü–£–°–¢–ê (–ü–ï–†–í–´–ô –ó–ê–ü–£–°–ö)
        if (Object.keys(products).length === 0) {
            logger.info('üîÑ –ë–î –ø—É—Å—Ç–∞, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–º –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º —Ç–æ–≤–∞—Ä–æ–≤...');
            
            // –ü–æ–ª–Ω—ã–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä–æ–≤ (–≤—Å–µ 49 —Ç–æ–≤–∞—Ä–æ–≤)
            const fullProducts = await loadFullProductCatalog();
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î –¢–û–õ–¨–ö–û –û–î–ò–ù –†–ê–ó
            try {
                await AdminProductsDB.saveAll(fullProducts);
                logger.info('‚úÖ –ü–æ–ª–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î –ü–ï–†–í–´–ô –†–ê–ó');
                products = fullProducts;
                
                // –ó–∞–ø–æ–ª–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∫—ç—à
                Object.entries(fullProducts).forEach(([categoryId, categoryProducts]) => {
                    adminProducts.set(categoryId, categoryProducts);
                });
            } catch (error) {
                logger.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞:', error.message);
                products = fullProducts; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ fallback
            }
        } else {
            // ‚úÖ –ò–°–ü–û–õ–¨–ó–£–ï–ú –°–û–•–†–ê–ù–ï–ù–ù–´–ï –î–ê–ù–ù–´–ï –ò–ó –ë–î (—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
            logger.info('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –ë–î —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏');
        }
        
        res.json({ ok: true, products });
    } catch (error) {
        logger.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤:', error.message);
        res.status(500).json({ ok: false, error: error.message });
    }
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
app.put('/api/admin/products', requireAdminAuth, validateAdminData, async (req, res) => {
    try {
        const { products } = req.body;
        
        // üóÑÔ∏è –°–û–•–†–ê–ù–Ø–ï–ú –í –ë–ê–ó–£ –î–ê–ù–ù–´–•
        await AdminProductsDB.saveAll(products);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∫—ç—à –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        adminProducts.clear();
        Object.entries(products).forEach(([categoryId, categoryProducts]) => {
            adminProducts.set(categoryId, categoryProducts);
        });
        
        logger.info('üîß –¢–æ–≤–∞—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ë–î');
        res.json({ ok: true, message: '–¢–æ–≤–∞—Ä—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö' });
        
    } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤:', error.message);
        res.status(500).json({ ok: false, error: error.message });
    }
});

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞
app.patch('/api/admin/products/:categoryId/:productId/toggle', requireAdminAuth, validateProductId, async (req, res) => {
    try {
        const { categoryId, productId } = req.params;
        
        // üóÑÔ∏è –ó–ê–ì–†–£–ñ–ê–ï–ú –í–°–ï –¢–û–í–ê–†–´ –ò–ó –ë–î
        let allProducts = await AdminProductsDB.loadAll();
        
        // –ï—Å–ª–∏ –≤ –ë–î –ø—É—Å—Ç–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞–º—è—Ç—å
        if (Object.keys(allProducts).length === 0) {
            allProducts = Object.fromEntries(adminProducts);
        }
        
        const categoryProducts = allProducts[categoryId];
        if (!categoryProducts) {
            return res.status(404).json({ ok: false, error: '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' });
        }
        
        const product = categoryProducts.find(p => p.id === productId);
        if (!product) {
            return res.status(404).json({ ok: false, error: '–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω' });
        }
        
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
        product.available = !product.available;
        
        // üíæ –°–û–•–†–ê–ù–Ø–ï–ú –í–°–ï –¢–û–í–ê–†–´ –û–ë–†–ê–¢–ù–û –í –ë–î
        await AdminProductsDB.saveAll(allProducts);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∫—ç—à
        if (adminProducts.has(categoryId)) {
            const localProducts = adminProducts.get(categoryId);
            const localProduct = localProducts.find(p => p.id === productId);
            if (localProduct) {
                localProduct.available = product.available;
            }
        }
        
        logger.info(`üîß –¢–æ–≤–∞—Ä ${productId} ${product.available ? '–ø–æ–∫–∞–∑–∞–Ω' : '—Å–∫—Ä—ã—Ç'} –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î`);
        res.json({ ok: true, product, available: product.available });
        
    } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞:', error.message);
        res.status(500).json({ ok: false, error: error.message });
    }
});

// SPA fallback - –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –≤–µ–¥—É—Ç –Ω–∞ index.html
app.get(/^\/(?!api).*/, (req, res) => {
    const requestedPath = req.path;
    
    // –ï—Å–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è admin.html, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å
    if (requestedPath === '/admin' || requestedPath === '/admin.html') {
        const adminPassword = config.ADMIN_PASSWORD;
        const providedPassword = req.query.password;
        
        if (providedPassword !== adminPassword) {
            res.status(401).send(`
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–í—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
            background: linear-gradient(135deg, #0b5c56, #2C5530);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
        }
        .login-container {
            background: rgba(255,255,255,0.1);
            padding: 40px;
            border-radius: 20px;
            backdrop-filter: blur(10px);
            box-shadow: 0 20px 40px rgba(0,0,0,0.3);
            text-align: center;
            max-width: 400px;
            width: 90%;
        }
        .login-icon { font-size: 60px; margin-bottom: 20px; }
        .login-title { font-size: 28px; font-weight: 700; margin-bottom: 10px; }
        .login-subtitle { opacity: 0.9; margin-bottom: 30px; }
        .login-form { margin-top: 30px; }
        .login-input {
            width: 100%;
            padding: 15px;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            margin-bottom: 20px;
            background: rgba(255,255,255,0.9);
            color: #2c3e50;
        }
        .login-btn {
            width: 100%;
            background: #D4A574;
            color: #1A1F2E;
            border: none;
            padding: 15px;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        .login-btn:hover { background: #c19660; transform: translateY(-2px); }
        .error-msg {
            background: rgba(231, 76, 60, 0.2);
            color: #ff6b6b;
            padding: 15px;
            border-radius: 12px;
            margin-bottom: 20px;
            border: 1px solid rgba(231, 76, 60, 0.3);
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="login-icon">üîê</div>
        <div class="login-title">–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</div>
        <div class="login-subtitle">Tundra Gourmet</div>
        
        ${providedPassword ? '<div class="error-msg">‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å</div>' : ''}
        
        <form class="login-form" method="GET">
            <input type="password" 
                   name="password" 
                   class="login-input" 
                   placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" 
                   required 
                   autofocus>
            <button type="submit" class="login-btn">üöÄ –í–æ–π—Ç–∏</button>
        </form>
        
        <div style="margin-top: 30px; font-size: 14px; opacity: 0.7;">
            üí° –ï—Å–ª–∏ –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É
        </div>
    </div>
</body>
</html>
            `);
            return;
        }
        
        res.sendFile(path.join(webRoot, 'admin.html'));
        return;
    }
    
    // –û—Å—Ç–∞–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –≤–µ–¥—É—Ç –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    res.sendFile(path.join(webRoot, 'index.html'));
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π –ë–î
async function startServer() {
    try {
        // üóÑÔ∏è –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ë–î (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è)
        if (process.env.CLEAR_DATABASE === 'true') {
            logger.warn('üö® –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•...');
            try {
                const { Pool } = require('pg');
                const pool = new Pool({ connectionString: config.DATABASE_URL });
                await pool.query('DELETE FROM admin_products');
                await pool.end();
                logger.info('‚úÖ –¢–∞–±–ª–∏—Ü–∞ admin_products –æ—á–∏—â–µ–Ω–∞');
            } catch (error) {
                logger.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ë–î:', error.message);
            }
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await initializeDatabase();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–∫–∞–∑–æ–≤ –∏–∑ –ë–î
        await initializeOrderCounter();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ÆKassa
        await initializeYooKassa();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –ë–î –µ—Å–ª–∏ –µ—Å—Ç—å
        try {
            const dbProducts = await AdminProductsDB.loadAll();
            if (Object.keys(dbProducts).length > 0) {
                logger.info('‚úÖ –¢–æ–≤–∞—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
                // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ Map –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Ç–µ–∫—É—â–∏–º –∫–æ–¥–æ–º
                adminProducts.clear();
                for (const [categoryId, products] of Object.entries(dbProducts)) {
                    adminProducts.set(categoryId, products);
                }
            }
        } catch (error) {
            logger.warn('‚ö†Ô∏è –¢–æ–≤–∞—Ä—ã –∏–∑ –ë–î –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
        }
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Chat ID (–≥—Ä—É–ø–ø—ã –∏–ª–∏ –ª–∏—á–Ω–æ–≥–æ —á–∞—Ç–∞)
        async function getTelegramChatId() {
            if (!config.TELEGRAM_BOT_TOKEN) {
                logger.warn('‚ö†Ô∏è TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
                return null;
            }
            
            try {
                const response = await axios.get(`https://api.telegram.org/bot${config.TELEGRAM_BOT_TOKEN}/getUpdates`);
                const updates = response.data.result;
                
                if (updates.length > 0) {
                    // –ò—â–µ–º –≥—Ä—É–ø–ø–æ–≤—ã–µ —á–∞—Ç—ã (ID –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –º–∏–Ω—É—Å–∞)
                    const groupChats = updates
                        .map(update => update.message?.chat || update.callback_query?.message?.chat)
                        .filter(chat => chat && chat.id < 0)
                        .map(chat => ({
                            id: chat.id,
                            title: chat.title || '–ì—Ä—É–ø–ø–∞',
                            type: chat.type
                        }));
                    
                    // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
                    const uniqueGroups = groupChats.filter((chat, index, self) => 
                        index === self.findIndex(c => c.id === chat.id)
                    );
                    
                    if (uniqueGroups.length > 0) {
                        logger.info('üì± –ù–∞–π–¥–µ–Ω—ã –≥—Ä—É–ø–ø–æ–≤—ã–µ —á–∞—Ç—ã:');
                        uniqueGroups.forEach(group => {
                            logger.info(`   üè¢ ${group.title} (${group.type}): ${group.id}`);
                        });
                        
                        const mainGroup = uniqueGroups[0];
                        logger.info('üí° –î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ Railway:');
                        logger.info(`   TELEGRAM_ADMIN_CHAT_ID=${mainGroup.id}`);
                        logger.info(`   (ID –≥—Ä—É–ø–ø—ã: ${mainGroup.title})`);
                        return mainGroup.id;
                    }
                    
                    // –ï—Å–ª–∏ –≥—Ä—É–ø–ø –Ω–µ—Ç, –∏—â–µ–º –ª–∏—á–Ω—ã–µ —á–∞—Ç—ã
                    const personalChats = updates
                        .map(update => update.message?.chat || update.callback_query?.message?.chat)
                        .filter(chat => chat && chat.id > 0)
                        .map(chat => ({
                            id: chat.id,
                            username: chat.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                            first_name: chat.first_name || ''
                        }));
                    
                    const uniquePersonal = personalChats.filter((chat, index, self) => 
                        index === self.findIndex(c => c.id === chat.id)
                    );
                    
                    if (uniquePersonal.length > 0) {
                        logger.info('üì± –ù–∞–π–¥–µ–Ω—ã –ª–∏—á–Ω—ã–µ —á–∞—Ç—ã:');
                        uniquePersonal.forEach(chat => {
                            logger.info(`   üë§ ${chat.first_name} (@${chat.username}): ${chat.id}`);
                        });
                        
                        const mainChat = uniquePersonal[0];
                        logger.info('üí° –î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ Railway:');
                        logger.info(`   TELEGRAM_ADMIN_CHAT_ID=${mainChat.id}`);
                        logger.info(`   (–õ–∏—á–Ω—ã–π —á–∞—Ç: ${mainChat.first_name})`);
                        return mainChat.id;
                    }
                }
                
                logger.warn('‚ö†Ô∏è Chat ID –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–µ.');
                return null;
            } catch (error) {
                logger.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è Chat ID:', error.message);
                return null;
            }
        }
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        app.listen(PORT, async () => {
            logger.info(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
            logger.info(`üìÅ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –∏–∑: ${webRoot}`);
            logger.info(`üîó Health check: http://localhost:${PORT}/health`);
            logger.info(`üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
            logger.info('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram:');
            logger.info(`   –¢–æ–∫–µ–Ω –±–æ—Ç–∞: ${config.TELEGRAM_BOT_TOKEN ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
            logger.info(`   Chat ID: ${config.TELEGRAM_ADMIN_CHAT_ID ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
            
            if (config.TELEGRAM_BOT_TOKEN && !config.TELEGRAM_ADMIN_CHAT_ID) {
                logger.info('üîç –ò—â–µ–º Chat ID –¥–ª—è Telegram –±–æ—Ç–∞...');
                await getTelegramChatId();
            } else if (!config.TELEGRAM_BOT_TOKEN) {
                logger.warn('‚ö†Ô∏è TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ Railway');
                logger.info('üí° –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é TELEGRAM_BOT_TOKEN –≤ Railway');
            } else {
                logger.info('‚úÖ Telegram –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é');
                
                // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è
                try {
                    await axios.post(`https://api.telegram.org/bot${config.TELEGRAM_BOT_TOKEN}/sendMessage`, {
                        chat_id: config.TELEGRAM_ADMIN_CHAT_ID,
                        text: 'üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ - Telegram –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!'
                    });
                    logger.info('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
                } catch (testError) {
                    logger.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:', testError.message);
                    if (testError.response?.status === 401) {
                        logger.error('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞');
                    } else if (testError.response?.status === 400) {
                        logger.error('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π Chat ID');
                    }
                }
            }
        });
        
    } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error.message);
        process.exit(1);
    }
}

// üõ°Ô∏è –û–ë–†–ê–ë–û–¢–ö–ê –ù–ï–ü–ï–†–ï–•–í–ê–ß–ï–ù–ù–´–• –û–®–ò–ë–û–ö
process.on('uncaughtException', (error) => {
    logger.error('üí• –ù–µ–ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error.message);
    logger.debug('Stack:', error.stack);
    // –ù–ï –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –ª–æ–≥–∏—Ä—É–µ–º –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
});

process.on('unhandledRejection', (reason, promise) => {
    logger.error('üí• –ù–µ–ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞:', reason);
    // –ù–ï –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –ª–æ–≥–∏—Ä—É–µ–º –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
});

startServer();

// Keep-alive –º–µ—Ö–∞–Ω–∏–∑–º –¥–ª—è Railway
setInterval(() => {
    const uptime = process.uptime();
    const memory = process.memoryUsage();
    logger.debug(`üíì Keep-alive: Uptime: ${Math.floor(uptime)}s, Memory: ${Math.round(memory.heapUsed / 1024 / 1024)}MB`);
}, 5 * 60 * 1000); // –ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç

// üßπ –ü–ï–†–ò–û–î–ò–ß–ï–°–ö–ê–Ø –û–ß–ò–°–¢–ö–ê –ü–ê–ú–Ø–¢–ò
setInterval(async () => {
    try {
        logger.debug('üßπ –ó–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏ –ø–∞–º—è—Ç–∏...');
        
        // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–∫–∞–∑—ã –∏–∑ –ø–∞–º—è—Ç–∏ (—Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤)
        const now = Date.now();
        const oneDayAgo = now - (24 * 60 * 60 * 1000);
        
        let cleanedOrders = 0;
        for (const [orderId, order] of orders.entries()) {
            if (order.createdAt && new Date(order.createdAt).getTime() < oneDayAgo) {
                // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä –µ—Å–ª–∏ –µ—Å—Ç—å
                clearOrderTimer(orderId);
                orders.delete(orderId);
                cleanedOrders++;
            }
        }
        
        // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–∫–∞–∑—ã –∏–∑ –ë–î (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π)
        try {
            const deletedCount = await OrdersDB.cleanupOldOrders();
            if (cleanedOrders > 0 || deletedCount > 0) {
                logger.info(`üóëÔ∏è –û—á–∏—â–µ–Ω–æ ${cleanedOrders} –∑–∞–∫–∞–∑–æ–≤ –∏–∑ –ø–∞–º—è—Ç–∏, ${deletedCount} –∏–∑ –ë–î`);
            }
        } catch (error) {
            logger.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ë–î:', error.message);
        }
        
        // –õ–æ–≥–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–∞–º—è—Ç–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if (cleanedOrders > 0) {
            const memory = process.memoryUsage();
            logger.info(`üìä –ü–∞–º—è—Ç—å: ${Math.round(memory.heapUsed / 1024 / 1024)}MB, –ó–∞–∫–∞–∑–æ–≤: ${orders.size}, –¢–∞–π–º–µ—Ä–æ–≤: ${orderTimers.size}`);
        }
        
    } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ø–∞–º—è—Ç–∏:', error.message);
    }
}, 60 * 60 * 1000); // –ö–∞–∂–¥—ã–π —á–∞—Å

// Graceful shutdown —Å –æ—á–∏—Å—Ç–∫–æ–π —Ä–µ—Å—É—Ä—Å–æ–≤
process.on('SIGTERM', () => {
    logger.info('üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...');
    cleanup();
    process.exit(0);
});

process.on('SIGINT', () => {
    logger.info('üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...');
    cleanup();
    process.exit(0);
});

// –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
function cleanup() {
    logger.info('üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤...');
    
    // –û—á–∏—â–∞–µ–º –≤—Å–µ —Ç–∞–π–º–µ—Ä—ã –∑–∞–∫–∞–∑–æ–≤
    let clearedTimers = 0;
    for (const [orderId, timer] of orderTimers.entries()) {
        clearTimeout(timer);
        clearedTimers++;
    }
    orderTimers.clear();
    
    if (clearedTimers > 0) {
        logger.info(`üóëÔ∏è –û—á–∏—â–µ–Ω–æ ${clearedTimers} —Ç–∞–π–º–µ—Ä–æ–≤ –∑–∞–∫–∞–∑–æ–≤`);
    }
    
    logger.info('‚úÖ –†–µ—Å—É—Ä—Å—ã –æ—á–∏—â–µ–Ω—ã');
}
